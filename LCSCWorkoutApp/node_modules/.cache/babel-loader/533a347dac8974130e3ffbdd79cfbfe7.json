{"ast":null,"code":"import { g as getAssetPath } from './chunk-58252182.js';\nvar CACHED_MAP;\n\nvar getIconMap = function getIconMap() {\n  if (!CACHED_MAP) {\n    var win = window;\n    win.Ionicons = win.Ionicons || {};\n    CACHED_MAP = win.Ionicons.map = win.Ionicons.map || new Map();\n  }\n\n  return CACHED_MAP;\n};\n\nvar addIcons = function addIcons(icons) {\n  var map = getIconMap();\n  Object.keys(icons).forEach(function (name) {\n    map.set(name, icons[name]);\n  });\n};\n\nvar getUrl = function getUrl(i) {\n  var url = getSrc(i.src);\n\n  if (url) {\n    return url;\n  }\n\n  url = getName(i.name, i.icon, i.mode, i.ios, i.md);\n\n  if (url) {\n    return getNamedUrl(url);\n  }\n\n  if (i.icon) {\n    url = getSrc(i.icon);\n\n    if (url) {\n      return url;\n    }\n\n    url = getSrc(i.icon[i.mode]);\n\n    if (url) {\n      return url;\n    }\n  }\n\n  return null;\n};\n\nvar getNamedUrl = function getNamedUrl(name) {\n  var url = getIconMap().get(name);\n\n  if (url) {\n    return url;\n  }\n\n  return getAssetPath(\"svg/\" + name + \".svg\");\n};\n\nvar getName = function getName(name, icon, mode, ios, md) {\n  // default to \"md\" if somehow the mode wasn't set\n  mode = (mode && mode.toLowerCase()) === 'ios' ? 'ios' : 'md'; // if an icon was passed in using the ios or md attributes\n  // set the iconName to whatever was passed in\n\n  if (ios && mode === 'ios') {\n    name = ios.toLowerCase();\n  } else if (md && mode === 'md') {\n    name = md.toLowerCase();\n  } else {\n    if (!name && icon && !isSrc(icon)) {\n      name = icon;\n    }\n\n    if (isStr(name)) {\n      name = name.toLowerCase();\n\n      if (!/^md-|^ios-|^logo-/.test(name)) {\n        // this does not have one of the defaults\n        // so lets auto add in the mode prefix for them\n        name = mode + '-' + name;\n      }\n    }\n  }\n\n  if (!isStr(name) || name.trim() === '') {\n    return null;\n  } // only allow alpha characters and dash\n\n\n  var invalidChars = name.replace(/[a-z]|-|\\d/gi, '');\n\n  if (invalidChars !== '') {\n    return null;\n  }\n\n  return name;\n};\n\nvar getSrc = function getSrc(src) {\n  if (isStr(src)) {\n    src = src.trim();\n\n    if (isSrc(src)) {\n      return src;\n    }\n  }\n\n  return null;\n};\n\nvar isSrc = function isSrc(str) {\n  return str.length > 0 && /(\\/|\\.)/.test(str);\n};\n\nvar isStr = function isStr(val) {\n  return typeof val === 'string';\n};\n\nexport { addIcons as a, getName as b, getUrl as g, isStr as i };","map":{"version":3,"sources":["/Users/timherbert/OneDrive/school/cs480/LCSCWorkoutApp/node_modules/ionicons/dist/esm/legacy/chunk-2a882949.js"],"names":["g","getAssetPath","CACHED_MAP","getIconMap","win","window","Ionicons","map","Map","addIcons","icons","Object","keys","forEach","name","set","getUrl","i","url","getSrc","src","getName","icon","mode","ios","md","getNamedUrl","get","toLowerCase","isSrc","isStr","test","trim","invalidChars","replace","str","length","val","a","b"],"mappings":"AAAA,SAASA,CAAC,IAAIC,YAAd,QAAkC,qBAAlC;AACA,IAAIC,UAAJ;;AACA,IAAIC,UAAU,GAAG,SAAbA,UAAa,GAAY;AACzB,MAAI,CAACD,UAAL,EAAiB;AACb,QAAIE,GAAG,GAAGC,MAAV;AACAD,IAAAA,GAAG,CAACE,QAAJ,GAAeF,GAAG,CAACE,QAAJ,IAAgB,EAA/B;AACAJ,IAAAA,UAAU,GAAGE,GAAG,CAACE,QAAJ,CAAaC,GAAb,GAAmBH,GAAG,CAACE,QAAJ,CAAaC,GAAb,IAAoB,IAAIC,GAAJ,EAApD;AACH;;AACD,SAAON,UAAP;AACH,CAPD;;AAQA,IAAIO,QAAQ,GAAG,SAAXA,QAAW,CAAUC,KAAV,EAAiB;AAC5B,MAAIH,GAAG,GAAGJ,UAAU,EAApB;AACAQ,EAAAA,MAAM,CAACC,IAAP,CAAYF,KAAZ,EAAmBG,OAAnB,CAA2B,UAAUC,IAAV,EAAgB;AACvCP,IAAAA,GAAG,CAACQ,GAAJ,CAAQD,IAAR,EAAcJ,KAAK,CAACI,IAAD,CAAnB;AACH,GAFD;AAGH,CALD;;AAMA,IAAIE,MAAM,GAAG,SAATA,MAAS,CAAUC,CAAV,EAAa;AACtB,MAAIC,GAAG,GAAGC,MAAM,CAACF,CAAC,CAACG,GAAH,CAAhB;;AACA,MAAIF,GAAJ,EAAS;AACL,WAAOA,GAAP;AACH;;AACDA,EAAAA,GAAG,GAAGG,OAAO,CAACJ,CAAC,CAACH,IAAH,EAASG,CAAC,CAACK,IAAX,EAAiBL,CAAC,CAACM,IAAnB,EAAyBN,CAAC,CAACO,GAA3B,EAAgCP,CAAC,CAACQ,EAAlC,CAAb;;AACA,MAAIP,GAAJ,EAAS;AACL,WAAOQ,WAAW,CAACR,GAAD,CAAlB;AACH;;AACD,MAAID,CAAC,CAACK,IAAN,EAAY;AACRJ,IAAAA,GAAG,GAAGC,MAAM,CAACF,CAAC,CAACK,IAAH,CAAZ;;AACA,QAAIJ,GAAJ,EAAS;AACL,aAAOA,GAAP;AACH;;AACDA,IAAAA,GAAG,GAAGC,MAAM,CAACF,CAAC,CAACK,IAAF,CAAOL,CAAC,CAACM,IAAT,CAAD,CAAZ;;AACA,QAAIL,GAAJ,EAAS;AACL,aAAOA,GAAP;AACH;AACJ;;AACD,SAAO,IAAP;AACH,CApBD;;AAqBA,IAAIQ,WAAW,GAAG,SAAdA,WAAc,CAAUZ,IAAV,EAAgB;AAC9B,MAAII,GAAG,GAAGf,UAAU,GAAGwB,GAAb,CAAiBb,IAAjB,CAAV;;AACA,MAAII,GAAJ,EAAS;AACL,WAAOA,GAAP;AACH;;AACD,SAAOjB,YAAY,CAAC,SAASa,IAAT,GAAgB,MAAjB,CAAnB;AACH,CAND;;AAOA,IAAIO,OAAO,GAAG,SAAVA,OAAU,CAAUP,IAAV,EAAgBQ,IAAhB,EAAsBC,IAAtB,EAA4BC,GAA5B,EAAiCC,EAAjC,EAAqC;AAC/C;AACAF,EAAAA,IAAI,GAAG,CAACA,IAAI,IAAIA,IAAI,CAACK,WAAL,EAAT,MAAiC,KAAjC,GAAyC,KAAzC,GAAiD,IAAxD,CAF+C,CAG/C;AACA;;AACA,MAAIJ,GAAG,IAAID,IAAI,KAAK,KAApB,EAA2B;AACvBT,IAAAA,IAAI,GAAGU,GAAG,CAACI,WAAJ,EAAP;AACH,GAFD,MAGK,IAAIH,EAAE,IAAIF,IAAI,KAAK,IAAnB,EAAyB;AAC1BT,IAAAA,IAAI,GAAGW,EAAE,CAACG,WAAH,EAAP;AACH,GAFI,MAGA;AACD,QAAI,CAACd,IAAD,IAASQ,IAAT,IAAiB,CAACO,KAAK,CAACP,IAAD,CAA3B,EAAmC;AAC/BR,MAAAA,IAAI,GAAGQ,IAAP;AACH;;AACD,QAAIQ,KAAK,CAAChB,IAAD,CAAT,EAAiB;AACbA,MAAAA,IAAI,GAAGA,IAAI,CAACc,WAAL,EAAP;;AACA,UAAI,CAAC,oBAAoBG,IAApB,CAAyBjB,IAAzB,CAAL,EAAqC;AACjC;AACA;AACAA,QAAAA,IAAI,GAAGS,IAAI,GAAG,GAAP,GAAaT,IAApB;AACH;AACJ;AACJ;;AACD,MAAI,CAACgB,KAAK,CAAChB,IAAD,CAAN,IAAgBA,IAAI,CAACkB,IAAL,OAAgB,EAApC,EAAwC;AACpC,WAAO,IAAP;AACH,GA1B8C,CA2B/C;;;AACA,MAAIC,YAAY,GAAGnB,IAAI,CAACoB,OAAL,CAAa,cAAb,EAA6B,EAA7B,CAAnB;;AACA,MAAID,YAAY,KAAK,EAArB,EAAyB;AACrB,WAAO,IAAP;AACH;;AACD,SAAOnB,IAAP;AACH,CAjCD;;AAkCA,IAAIK,MAAM,GAAG,SAATA,MAAS,CAAUC,GAAV,EAAe;AACxB,MAAIU,KAAK,CAACV,GAAD,CAAT,EAAgB;AACZA,IAAAA,GAAG,GAAGA,GAAG,CAACY,IAAJ,EAAN;;AACA,QAAIH,KAAK,CAACT,GAAD,CAAT,EAAgB;AACZ,aAAOA,GAAP;AACH;AACJ;;AACD,SAAO,IAAP;AACH,CARD;;AASA,IAAIS,KAAK,GAAG,SAARA,KAAQ,CAAUM,GAAV,EAAe;AACvB,SAAOA,GAAG,CAACC,MAAJ,GAAa,CAAb,IAAkB,UAAUL,IAAV,CAAeI,GAAf,CAAzB;AACH,CAFD;;AAGA,IAAIL,KAAK,GAAG,SAARA,KAAQ,CAAUO,GAAV,EAAe;AAAE,SAAO,OAAOA,GAAP,KAAe,QAAtB;AAAiC,CAA9D;;AACA,SAAS5B,QAAQ,IAAI6B,CAArB,EAAwBjB,OAAO,IAAIkB,CAAnC,EAAsCvB,MAAM,IAAIhB,CAAhD,EAAmD8B,KAAK,IAAIb,CAA5D","sourcesContent":["import { g as getAssetPath } from './chunk-58252182.js';\nvar CACHED_MAP;\nvar getIconMap = function () {\n    if (!CACHED_MAP) {\n        var win = window;\n        win.Ionicons = win.Ionicons || {};\n        CACHED_MAP = win.Ionicons.map = win.Ionicons.map || new Map();\n    }\n    return CACHED_MAP;\n};\nvar addIcons = function (icons) {\n    var map = getIconMap();\n    Object.keys(icons).forEach(function (name) {\n        map.set(name, icons[name]);\n    });\n};\nvar getUrl = function (i) {\n    var url = getSrc(i.src);\n    if (url) {\n        return url;\n    }\n    url = getName(i.name, i.icon, i.mode, i.ios, i.md);\n    if (url) {\n        return getNamedUrl(url);\n    }\n    if (i.icon) {\n        url = getSrc(i.icon);\n        if (url) {\n            return url;\n        }\n        url = getSrc(i.icon[i.mode]);\n        if (url) {\n            return url;\n        }\n    }\n    return null;\n};\nvar getNamedUrl = function (name) {\n    var url = getIconMap().get(name);\n    if (url) {\n        return url;\n    }\n    return getAssetPath(\"svg/\" + name + \".svg\");\n};\nvar getName = function (name, icon, mode, ios, md) {\n    // default to \"md\" if somehow the mode wasn't set\n    mode = (mode && mode.toLowerCase()) === 'ios' ? 'ios' : 'md';\n    // if an icon was passed in using the ios or md attributes\n    // set the iconName to whatever was passed in\n    if (ios && mode === 'ios') {\n        name = ios.toLowerCase();\n    }\n    else if (md && mode === 'md') {\n        name = md.toLowerCase();\n    }\n    else {\n        if (!name && icon && !isSrc(icon)) {\n            name = icon;\n        }\n        if (isStr(name)) {\n            name = name.toLowerCase();\n            if (!/^md-|^ios-|^logo-/.test(name)) {\n                // this does not have one of the defaults\n                // so lets auto add in the mode prefix for them\n                name = mode + '-' + name;\n            }\n        }\n    }\n    if (!isStr(name) || name.trim() === '') {\n        return null;\n    }\n    // only allow alpha characters and dash\n    var invalidChars = name.replace(/[a-z]|-|\\d/gi, '');\n    if (invalidChars !== '') {\n        return null;\n    }\n    return name;\n};\nvar getSrc = function (src) {\n    if (isStr(src)) {\n        src = src.trim();\n        if (isSrc(src)) {\n            return src;\n        }\n    }\n    return null;\n};\nvar isSrc = function (str) {\n    return str.length > 0 && /(\\/|\\.)/.test(str);\n};\nvar isStr = function (val) { return typeof val === 'string'; };\nexport { addIcons as a, getName as b, getUrl as g, isStr as i };\n"]},"metadata":{},"sourceType":"module"}