{"ast":null,"code":"import { r as registerInstance, c as createEvent, d as getIonMode, h, e as getElement, H as Host } from './core-ca0488fc.js';\nimport './config-3c7f3790.js';\nvar SPLIT_PANE_MAIN = 'split-pane-main';\nvar SPLIT_PANE_SIDE = 'split-pane-side';\nvar QUERY = {\n  'xs': '(min-width: 0px)',\n  'sm': '(min-width: 576px)',\n  'md': '(min-width: 768px)',\n  'lg': '(min-width: 992px)',\n  'xl': '(min-width: 1200px)',\n  'never': ''\n};\n\nvar SplitPane =\n/** @class */\nfunction () {\n  function SplitPane(hostRef) {\n    registerInstance(this, hostRef);\n    this.visible = false;\n    /**\n     * If `true`, the split pane will be hidden.\n     */\n\n    this.disabled = false;\n    /**\n     * When the split-pane should be shown.\n     * Can be a CSS media query expression, or a shortcut expression.\n     * Can also be a boolean expression.\n     */\n\n    this.when = QUERY['lg'];\n    this.ionSplitPaneVisible = createEvent(this, \"ionSplitPaneVisible\", 7);\n  }\n\n  SplitPane.prototype.visibleChanged = function (visible) {\n    var detail = {\n      visible: visible,\n      isPane: this.isPane.bind(this)\n    };\n    this.ionSplitPaneVisible.emit(detail);\n  };\n\n  SplitPane.prototype.connectedCallback = function () {\n    this.styleChildren();\n    this.updateState();\n  };\n\n  SplitPane.prototype.disconnectedCallback = function () {\n    if (this.rmL) {\n      this.rmL();\n      this.rmL = undefined;\n    }\n  };\n\n  SplitPane.prototype.componentWillLoad = function () {\n    if (this.contentId === undefined) {\n      console.warn(\"[DEPRECATED][ion-split-pane] Using the [main] attribute is deprecated, please use the \\\"contentId\\\" property instead:\\nBEFORE:\\n  <ion-split-pane>\\n    ...\\n    <div main>...</div>\\n  </ion-split-pane>\\n\\nAFTER:\\n  <ion-split-pane contentId=\\\"main-content\\\">\\n    ...\\n    <div id=\\\"main-content\\\">...</div>\\n  </ion-split-pane>\\n\");\n    }\n  };\n\n  SplitPane.prototype.updateState = function () {\n    var _this = this;\n\n    if (this.rmL) {\n      this.rmL();\n      this.rmL = undefined;\n    } // Check if the split-pane is disabled\n\n\n    if (this.disabled) {\n      this.visible = false;\n      return;\n    } // When query is a boolean\n\n\n    var query = this.when;\n\n    if (typeof query === 'boolean') {\n      this.visible = query;\n      return;\n    } // When query is a string, let's find first if it is a shortcut\n\n\n    var mediaQuery = QUERY[query] || query; // Media query is empty or null, we hide it\n\n    if (mediaQuery.length === 0) {\n      this.visible = false;\n      return;\n    }\n\n    if (window.matchMedia) {\n      // Listen on media query\n      var callback_1 = function callback_1(q) {\n        _this.visible = q.matches;\n      };\n\n      var mediaList_1 = window.matchMedia(mediaQuery);\n      mediaList_1.addListener(callback_1);\n\n      this.rmL = function () {\n        return mediaList_1.removeListener(callback_1);\n      };\n\n      this.visible = mediaList_1.matches;\n    }\n  };\n\n  SplitPane.prototype.isPane = function (element) {\n    if (!this.visible) {\n      return false;\n    }\n\n    return element.parentElement === this.el && element.classList.contains(SPLIT_PANE_SIDE);\n  };\n\n  SplitPane.prototype.styleChildren = function () {\n    var contentId = this.contentId;\n    var children = this.el.children;\n    var nu = this.el.childElementCount;\n    var foundMain = false;\n\n    for (var i = 0; i < nu; i++) {\n      var child = children[i];\n      var isMain = contentId !== undefined ? child.id === contentId : child.hasAttribute('main');\n\n      if (isMain) {\n        if (foundMain) {\n          console.warn('split pane cannot have more than one main node');\n          return;\n        }\n\n        foundMain = true;\n      }\n\n      setPaneClass(child, isMain);\n    }\n\n    if (!foundMain) {\n      console.warn('split pane does not have a specified main node');\n    }\n  };\n\n  SplitPane.prototype.render = function () {\n    var _a;\n\n    var mode = getIonMode(this);\n    return h(Host, {\n      class: (_a = {}, _a[mode] = true, // Used internally for styling\n      _a[\"split-pane-\" + mode] = true, _a['split-pane-visible'] = this.visible, _a)\n    });\n  };\n\n  Object.defineProperty(SplitPane.prototype, \"el\", {\n    get: function get() {\n      return getElement(this);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SplitPane, \"watchers\", {\n    get: function get() {\n      return {\n        \"visible\": [\"visibleChanged\"],\n        \"disabled\": [\"updateState\"],\n        \"when\": [\"updateState\"]\n      };\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SplitPane, \"style\", {\n    get: function get() {\n      return \"ion-split-pane{left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}.split-pane-visible>.split-pane-main,.split-pane-visible>.split-pane-side{left:0;right:0;top:0;bottom:0;position:relative;-ms-flex:1;flex:1;-webkit-box-shadow:none!important;box-shadow:none!important;z-index:0}.split-pane-visible>.split-pane-side:not(ion-menu),.split-pane-visible>ion-menu.split-pane-side.menu-enabled{display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}.split-pane-side:not(ion-menu){display:none}.split-pane-visible>.split-pane-side{-ms-flex-order:-1;order:-1}.split-pane-visible>.split-pane-side[side=end]{-ms-flex-order:1;order:1}.split-pane-md{--border:1px solid var(--ion-item-border-color,var(--ion-border-color,var(--ion-color-step-150,rgba(0,0,0,0.13))))}.split-pane-md.split-pane-visible>.split-pane-side{min-width:270px;max-width:28%;border-right:var(--border);border-left:0}.split-pane-md.split-pane-visible>.split-pane-side[side=end]{min-width:270px;max-width:28%;border-right:0;border-left:var(--border)}\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return SplitPane;\n}();\n\nvar setPaneClass = function setPaneClass(el, isMain) {\n  var toAdd;\n  var toRemove;\n\n  if (isMain) {\n    toAdd = SPLIT_PANE_MAIN;\n    toRemove = SPLIT_PANE_SIDE;\n  } else {\n    toAdd = SPLIT_PANE_SIDE;\n    toRemove = SPLIT_PANE_MAIN;\n  }\n\n  var classList = el.classList;\n  classList.add(toAdd);\n  classList.remove(toRemove);\n};\n\nexport { SplitPane as ion_split_pane };","map":{"version":3,"sources":["/Users/timherbert/OneDrive/school/cs480/LCSCWorkoutApp/node_modules/@ionic/core/dist/esm-es5/ion-split-pane-md.entry.js"],"names":["r","registerInstance","c","createEvent","d","getIonMode","h","e","getElement","H","Host","SPLIT_PANE_MAIN","SPLIT_PANE_SIDE","QUERY","SplitPane","hostRef","visible","disabled","when","ionSplitPaneVisible","prototype","visibleChanged","detail","isPane","bind","emit","connectedCallback","styleChildren","updateState","disconnectedCallback","rmL","undefined","componentWillLoad","contentId","console","warn","_this","query","mediaQuery","length","window","matchMedia","callback_1","q","matches","mediaList_1","addListener","removeListener","element","parentElement","el","classList","contains","children","nu","childElementCount","foundMain","i","child","isMain","id","hasAttribute","setPaneClass","render","_a","mode","class","Object","defineProperty","get","enumerable","configurable","toAdd","toRemove","add","remove","ion_split_pane"],"mappings":"AAAA,SAASA,CAAC,IAAIC,gBAAd,EAAgCC,CAAC,IAAIC,WAArC,EAAkDC,CAAC,IAAIC,UAAvD,EAAmEC,CAAnE,EAAsEC,CAAC,IAAIC,UAA3E,EAAuFC,CAAC,IAAIC,IAA5F,QAAwG,oBAAxG;AACA,OAAO,sBAAP;AACA,IAAIC,eAAe,GAAG,iBAAtB;AACA,IAAIC,eAAe,GAAG,iBAAtB;AACA,IAAIC,KAAK,GAAG;AACR,QAAM,kBADE;AAER,QAAM,oBAFE;AAGR,QAAM,oBAHE;AAIR,QAAM,oBAJE;AAKR,QAAM,qBALE;AAMR,WAAS;AAND,CAAZ;;AAQA,IAAIC,SAAS;AAAG;AAAe,YAAY;AACvC,WAASA,SAAT,CAAmBC,OAAnB,EAA4B;AACxBd,IAAAA,gBAAgB,CAAC,IAAD,EAAOc,OAAP,CAAhB;AACA,SAAKC,OAAL,GAAe,KAAf;AACA;;;;AAGA,SAAKC,QAAL,GAAgB,KAAhB;AACA;;;;;;AAKA,SAAKC,IAAL,GAAYL,KAAK,CAAC,IAAD,CAAjB;AACA,SAAKM,mBAAL,GAA2BhB,WAAW,CAAC,IAAD,EAAO,qBAAP,EAA8B,CAA9B,CAAtC;AACH;;AACDW,EAAAA,SAAS,CAACM,SAAV,CAAoBC,cAApB,GAAqC,UAAUL,OAAV,EAAmB;AACpD,QAAIM,MAAM,GAAG;AAAEN,MAAAA,OAAO,EAAEA,OAAX;AAAoBO,MAAAA,MAAM,EAAE,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB;AAA5B,KAAb;AACA,SAAKL,mBAAL,CAAyBM,IAAzB,CAA8BH,MAA9B;AACH,GAHD;;AAIAR,EAAAA,SAAS,CAACM,SAAV,CAAoBM,iBAApB,GAAwC,YAAY;AAChD,SAAKC,aAAL;AACA,SAAKC,WAAL;AACH,GAHD;;AAIAd,EAAAA,SAAS,CAACM,SAAV,CAAoBS,oBAApB,GAA2C,YAAY;AACnD,QAAI,KAAKC,GAAT,EAAc;AACV,WAAKA,GAAL;AACA,WAAKA,GAAL,GAAWC,SAAX;AACH;AACJ,GALD;;AAMAjB,EAAAA,SAAS,CAACM,SAAV,CAAoBY,iBAApB,GAAwC,YAAY;AAChD,QAAI,KAAKC,SAAL,KAAmBF,SAAvB,EAAkC;AAC9BG,MAAAA,OAAO,CAACC,IAAR,CAAa,4UAAb;AACH;AACJ,GAJD;;AAKArB,EAAAA,SAAS,CAACM,SAAV,CAAoBQ,WAApB,GAAkC,YAAY;AAC1C,QAAIQ,KAAK,GAAG,IAAZ;;AACA,QAAI,KAAKN,GAAT,EAAc;AACV,WAAKA,GAAL;AACA,WAAKA,GAAL,GAAWC,SAAX;AACH,KALyC,CAM1C;;;AACA,QAAI,KAAKd,QAAT,EAAmB;AACf,WAAKD,OAAL,GAAe,KAAf;AACA;AACH,KAVyC,CAW1C;;;AACA,QAAIqB,KAAK,GAAG,KAAKnB,IAAjB;;AACA,QAAI,OAAOmB,KAAP,KAAiB,SAArB,EAAgC;AAC5B,WAAKrB,OAAL,GAAeqB,KAAf;AACA;AACH,KAhByC,CAiB1C;;;AACA,QAAIC,UAAU,GAAGzB,KAAK,CAACwB,KAAD,CAAL,IAAgBA,KAAjC,CAlB0C,CAmB1C;;AACA,QAAIC,UAAU,CAACC,MAAX,KAAsB,CAA1B,EAA6B;AACzB,WAAKvB,OAAL,GAAe,KAAf;AACA;AACH;;AACD,QAAIwB,MAAM,CAACC,UAAX,EAAuB;AACnB;AACA,UAAIC,UAAU,GAAG,SAAbA,UAAa,CAAUC,CAAV,EAAa;AAC1BP,QAAAA,KAAK,CAACpB,OAAN,GAAgB2B,CAAC,CAACC,OAAlB;AACH,OAFD;;AAGA,UAAIC,WAAW,GAAGL,MAAM,CAACC,UAAP,CAAkBH,UAAlB,CAAlB;AACAO,MAAAA,WAAW,CAACC,WAAZ,CAAwBJ,UAAxB;;AACA,WAAKZ,GAAL,GAAW,YAAY;AAAE,eAAOe,WAAW,CAACE,cAAZ,CAA2BL,UAA3B,CAAP;AAAgD,OAAzE;;AACA,WAAK1B,OAAL,GAAe6B,WAAW,CAACD,OAA3B;AACH;AACJ,GAlCD;;AAmCA9B,EAAAA,SAAS,CAACM,SAAV,CAAoBG,MAApB,GAA6B,UAAUyB,OAAV,EAAmB;AAC5C,QAAI,CAAC,KAAKhC,OAAV,EAAmB;AACf,aAAO,KAAP;AACH;;AACD,WAAOgC,OAAO,CAACC,aAAR,KAA0B,KAAKC,EAA/B,IACAF,OAAO,CAACG,SAAR,CAAkBC,QAAlB,CAA2BxC,eAA3B,CADP;AAEH,GAND;;AAOAE,EAAAA,SAAS,CAACM,SAAV,CAAoBO,aAApB,GAAoC,YAAY;AAC5C,QAAIM,SAAS,GAAG,KAAKA,SAArB;AACA,QAAIoB,QAAQ,GAAG,KAAKH,EAAL,CAAQG,QAAvB;AACA,QAAIC,EAAE,GAAG,KAAKJ,EAAL,CAAQK,iBAAjB;AACA,QAAIC,SAAS,GAAG,KAAhB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,EAApB,EAAwBG,CAAC,EAAzB,EAA6B;AACzB,UAAIC,KAAK,GAAGL,QAAQ,CAACI,CAAD,CAApB;AACA,UAAIE,MAAM,GAAG1B,SAAS,KAAKF,SAAd,GAA0B2B,KAAK,CAACE,EAAN,KAAa3B,SAAvC,GAAmDyB,KAAK,CAACG,YAAN,CAAmB,MAAnB,CAAhE;;AACA,UAAIF,MAAJ,EAAY;AACR,YAAIH,SAAJ,EAAe;AACXtB,UAAAA,OAAO,CAACC,IAAR,CAAa,gDAAb;AACA;AACH;;AACDqB,QAAAA,SAAS,GAAG,IAAZ;AACH;;AACDM,MAAAA,YAAY,CAACJ,KAAD,EAAQC,MAAR,CAAZ;AACH;;AACD,QAAI,CAACH,SAAL,EAAgB;AACZtB,MAAAA,OAAO,CAACC,IAAR,CAAa,gDAAb;AACH;AACJ,GApBD;;AAqBArB,EAAAA,SAAS,CAACM,SAAV,CAAoB2C,MAApB,GAA6B,YAAY;AACrC,QAAIC,EAAJ;;AACA,QAAIC,IAAI,GAAG5D,UAAU,CAAC,IAAD,CAArB;AACA,WAAQC,CAAC,CAACI,IAAD,EAAO;AAAEwD,MAAAA,KAAK,GAAGF,EAAE,GAAG,EAAL,EAClBA,EAAE,CAACC,IAAD,CAAF,GAAW,IADO,EAElB;AACAD,MAAAA,EAAE,CAAC,gBAAgBC,IAAjB,CAAF,GAA2B,IAHT,EAIlBD,EAAE,CAAC,oBAAD,CAAF,GAA2B,KAAKhD,OAJd,EAKlBgD,EALe;AAAP,KAAP,CAAT;AAMH,GATD;;AAUAG,EAAAA,MAAM,CAACC,cAAP,CAAsBtD,SAAS,CAACM,SAAhC,EAA2C,IAA3C,EAAiD;AAC7CiD,IAAAA,GAAG,EAAE,eAAY;AAAE,aAAO7D,UAAU,CAAC,IAAD,CAAjB;AAA0B,KADA;AAE7C8D,IAAAA,UAAU,EAAE,IAFiC;AAG7CC,IAAAA,YAAY,EAAE;AAH+B,GAAjD;AAKAJ,EAAAA,MAAM,CAACC,cAAP,CAAsBtD,SAAtB,EAAiC,UAAjC,EAA6C;AACzCuD,IAAAA,GAAG,EAAE,eAAY;AACb,aAAO;AACH,mBAAW,CAAC,gBAAD,CADR;AAEH,oBAAY,CAAC,aAAD,CAFT;AAGH,gBAAQ,CAAC,aAAD;AAHL,OAAP;AAKH,KAPwC;AAQzCC,IAAAA,UAAU,EAAE,IAR6B;AASzCC,IAAAA,YAAY,EAAE;AAT2B,GAA7C;AAWAJ,EAAAA,MAAM,CAACC,cAAP,CAAsBtD,SAAtB,EAAiC,OAAjC,EAA0C;AACtCuD,IAAAA,GAAG,EAAE,eAAY;AAAE,aAAO,unCAAP;AAAioC,KAD9mC;AAEtCC,IAAAA,UAAU,EAAE,IAF0B;AAGtCC,IAAAA,YAAY,EAAE;AAHwB,GAA1C;AAKA,SAAOzD,SAAP;AACH,CAlI8B,EAA/B;;AAmIA,IAAIgD,YAAY,GAAG,SAAfA,YAAe,CAAUZ,EAAV,EAAcS,MAAd,EAAsB;AACrC,MAAIa,KAAJ;AACA,MAAIC,QAAJ;;AACA,MAAId,MAAJ,EAAY;AACRa,IAAAA,KAAK,GAAG7D,eAAR;AACA8D,IAAAA,QAAQ,GAAG7D,eAAX;AACH,GAHD,MAIK;AACD4D,IAAAA,KAAK,GAAG5D,eAAR;AACA6D,IAAAA,QAAQ,GAAG9D,eAAX;AACH;;AACD,MAAIwC,SAAS,GAAGD,EAAE,CAACC,SAAnB;AACAA,EAAAA,SAAS,CAACuB,GAAV,CAAcF,KAAd;AACArB,EAAAA,SAAS,CAACwB,MAAV,CAAiBF,QAAjB;AACH,CAdD;;AAeA,SAAS3D,SAAS,IAAI8D,cAAtB","sourcesContent":["import { r as registerInstance, c as createEvent, d as getIonMode, h, e as getElement, H as Host } from './core-ca0488fc.js';\nimport './config-3c7f3790.js';\nvar SPLIT_PANE_MAIN = 'split-pane-main';\nvar SPLIT_PANE_SIDE = 'split-pane-side';\nvar QUERY = {\n    'xs': '(min-width: 0px)',\n    'sm': '(min-width: 576px)',\n    'md': '(min-width: 768px)',\n    'lg': '(min-width: 992px)',\n    'xl': '(min-width: 1200px)',\n    'never': ''\n};\nvar SplitPane = /** @class */ (function () {\n    function SplitPane(hostRef) {\n        registerInstance(this, hostRef);\n        this.visible = false;\n        /**\n         * If `true`, the split pane will be hidden.\n         */\n        this.disabled = false;\n        /**\n         * When the split-pane should be shown.\n         * Can be a CSS media query expression, or a shortcut expression.\n         * Can also be a boolean expression.\n         */\n        this.when = QUERY['lg'];\n        this.ionSplitPaneVisible = createEvent(this, \"ionSplitPaneVisible\", 7);\n    }\n    SplitPane.prototype.visibleChanged = function (visible) {\n        var detail = { visible: visible, isPane: this.isPane.bind(this) };\n        this.ionSplitPaneVisible.emit(detail);\n    };\n    SplitPane.prototype.connectedCallback = function () {\n        this.styleChildren();\n        this.updateState();\n    };\n    SplitPane.prototype.disconnectedCallback = function () {\n        if (this.rmL) {\n            this.rmL();\n            this.rmL = undefined;\n        }\n    };\n    SplitPane.prototype.componentWillLoad = function () {\n        if (this.contentId === undefined) {\n            console.warn(\"[DEPRECATED][ion-split-pane] Using the [main] attribute is deprecated, please use the \\\"contentId\\\" property instead:\\nBEFORE:\\n  <ion-split-pane>\\n    ...\\n    <div main>...</div>\\n  </ion-split-pane>\\n\\nAFTER:\\n  <ion-split-pane contentId=\\\"main-content\\\">\\n    ...\\n    <div id=\\\"main-content\\\">...</div>\\n  </ion-split-pane>\\n\");\n        }\n    };\n    SplitPane.prototype.updateState = function () {\n        var _this = this;\n        if (this.rmL) {\n            this.rmL();\n            this.rmL = undefined;\n        }\n        // Check if the split-pane is disabled\n        if (this.disabled) {\n            this.visible = false;\n            return;\n        }\n        // When query is a boolean\n        var query = this.when;\n        if (typeof query === 'boolean') {\n            this.visible = query;\n            return;\n        }\n        // When query is a string, let's find first if it is a shortcut\n        var mediaQuery = QUERY[query] || query;\n        // Media query is empty or null, we hide it\n        if (mediaQuery.length === 0) {\n            this.visible = false;\n            return;\n        }\n        if (window.matchMedia) {\n            // Listen on media query\n            var callback_1 = function (q) {\n                _this.visible = q.matches;\n            };\n            var mediaList_1 = window.matchMedia(mediaQuery);\n            mediaList_1.addListener(callback_1);\n            this.rmL = function () { return mediaList_1.removeListener(callback_1); };\n            this.visible = mediaList_1.matches;\n        }\n    };\n    SplitPane.prototype.isPane = function (element) {\n        if (!this.visible) {\n            return false;\n        }\n        return element.parentElement === this.el\n            && element.classList.contains(SPLIT_PANE_SIDE);\n    };\n    SplitPane.prototype.styleChildren = function () {\n        var contentId = this.contentId;\n        var children = this.el.children;\n        var nu = this.el.childElementCount;\n        var foundMain = false;\n        for (var i = 0; i < nu; i++) {\n            var child = children[i];\n            var isMain = contentId !== undefined ? child.id === contentId : child.hasAttribute('main');\n            if (isMain) {\n                if (foundMain) {\n                    console.warn('split pane cannot have more than one main node');\n                    return;\n                }\n                foundMain = true;\n            }\n            setPaneClass(child, isMain);\n        }\n        if (!foundMain) {\n            console.warn('split pane does not have a specified main node');\n        }\n    };\n    SplitPane.prototype.render = function () {\n        var _a;\n        var mode = getIonMode(this);\n        return (h(Host, { class: (_a = {},\n                _a[mode] = true,\n                // Used internally for styling\n                _a[\"split-pane-\" + mode] = true,\n                _a['split-pane-visible'] = this.visible,\n                _a) }));\n    };\n    Object.defineProperty(SplitPane.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SplitPane, \"watchers\", {\n        get: function () {\n            return {\n                \"visible\": [\"visibleChanged\"],\n                \"disabled\": [\"updateState\"],\n                \"when\": [\"updateState\"]\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SplitPane, \"style\", {\n        get: function () { return \"ion-split-pane{left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}.split-pane-visible>.split-pane-main,.split-pane-visible>.split-pane-side{left:0;right:0;top:0;bottom:0;position:relative;-ms-flex:1;flex:1;-webkit-box-shadow:none!important;box-shadow:none!important;z-index:0}.split-pane-visible>.split-pane-side:not(ion-menu),.split-pane-visible>ion-menu.split-pane-side.menu-enabled{display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}.split-pane-side:not(ion-menu){display:none}.split-pane-visible>.split-pane-side{-ms-flex-order:-1;order:-1}.split-pane-visible>.split-pane-side[side=end]{-ms-flex-order:1;order:1}.split-pane-md{--border:1px solid var(--ion-item-border-color,var(--ion-border-color,var(--ion-color-step-150,rgba(0,0,0,0.13))))}.split-pane-md.split-pane-visible>.split-pane-side{min-width:270px;max-width:28%;border-right:var(--border);border-left:0}.split-pane-md.split-pane-visible>.split-pane-side[side=end]{min-width:270px;max-width:28%;border-right:0;border-left:var(--border)}\"; },\n        enumerable: true,\n        configurable: true\n    });\n    return SplitPane;\n}());\nvar setPaneClass = function (el, isMain) {\n    var toAdd;\n    var toRemove;\n    if (isMain) {\n        toAdd = SPLIT_PANE_MAIN;\n        toRemove = SPLIT_PANE_SIDE;\n    }\n    else {\n        toAdd = SPLIT_PANE_SIDE;\n        toRemove = SPLIT_PANE_MAIN;\n    }\n    var classList = el.classList;\n    classList.add(toAdd);\n    classList.remove(toRemove);\n};\nexport { SplitPane as ion_split_pane };\n"]},"metadata":{},"sourceType":"module"}