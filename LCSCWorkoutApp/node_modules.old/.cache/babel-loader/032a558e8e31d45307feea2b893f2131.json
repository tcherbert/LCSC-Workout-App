{"ast":null,"code":"var transitionEnd = function transitionEnd(el, callback) {\n  var unRegTrans;\n  var opts = {\n    passive: true\n  };\n\n  var unregister = function unregister() {\n    if (unRegTrans) {\n      unRegTrans();\n    }\n  };\n\n  var onTransitionEnd = function onTransitionEnd(ev) {\n    if (el === ev.target) {\n      unregister();\n      callback(ev);\n    }\n  };\n\n  if (el) {\n    el.addEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n    el.addEventListener('transitionend', onTransitionEnd, opts);\n\n    unRegTrans = function unRegTrans() {\n      el.removeEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n      el.removeEventListener('transitionend', onTransitionEnd, opts);\n    };\n  }\n\n  return unregister;\n};\n\nvar CSS_VALUE_REGEX = /(^-?\\d*\\.?\\d*)(.*)/;\nvar DURATION_MIN = 32;\nvar TRANSITION_END_FALLBACK_PADDING_MS = 400;\nvar TRANSFORM_PROPS = {\n  'translateX': 1,\n  'translateY': 1,\n  'translateZ': 1,\n  'scale': 1,\n  'scaleX': 1,\n  'scaleY': 1,\n  'scaleZ': 1,\n  'rotate': 1,\n  'rotateX': 1,\n  'rotateY': 1,\n  'rotateZ': 1,\n  'skewX': 1,\n  'skewY': 1,\n  'perspective': 1\n};\nvar win = typeof window !== 'undefined' ? window : {};\nvar raf = win.requestAnimationFrame ? win.requestAnimationFrame.bind(win) : function (f) {\n  return f(Date.now());\n};\n\nvar Animator =\n/** @class */\nfunction () {\n  function Animator() {\n    this._hasDur = false;\n    this._hasTweenEffect = false;\n    this._isAsync = false;\n    this._isReverse = false;\n    this._destroyed = false;\n    this.hasChildren = false;\n    this.isPlaying = false;\n    this.hasCompleted = false;\n  }\n\n  Animator.prototype.addElement = function (el) {\n    if (el != null) {\n      if (el.length > 0) {\n        for (var i = 0; i < el.length; i++) {\n          this._addEl(el[i]);\n        }\n      } else {\n        this._addEl(el);\n      }\n    }\n\n    return this;\n  };\n  /**\n   * NO DOM\n   */\n\n\n  Animator.prototype._addEl = function (el) {\n    if (el.nodeType === 1) {\n      (this._elements = this._elements || []).push(el);\n    }\n  };\n  /**\n   * Add a child animation to this animation.\n   */\n\n\n  Animator.prototype.add = function (childAnimation) {\n    childAnimation.parent = this;\n    this.hasChildren = true;\n    (this._childAnimations = this._childAnimations || []).push(childAnimation);\n    return this;\n  };\n  /**\n   * Get the duration of this animation. If this animation does\n   * not have a duration, then it'll get the duration from its parent.\n   */\n\n\n  Animator.prototype.getDuration = function (opts) {\n    if (opts && opts.duration !== undefined) {\n      return opts.duration;\n    } else if (this._duration !== undefined) {\n      return this._duration;\n    } else if (this.parent) {\n      return this.parent.getDuration();\n    }\n\n    return 0;\n  };\n  /**\n   * Returns if the animation is a root one.\n   */\n\n\n  Animator.prototype.isRoot = function () {\n    return !this.parent;\n  };\n  /**\n   * Set the duration for this animation.\n   */\n\n\n  Animator.prototype.duration = function (milliseconds) {\n    this._duration = milliseconds;\n    return this;\n  };\n  /**\n   * Get the easing of this animation. If this animation does\n   * not have an easing, then it'll get the easing from its parent.\n   */\n\n\n  Animator.prototype.getEasing = function () {\n    if (this._isReverse && this._reversedEasingName !== undefined) {\n      return this._reversedEasingName;\n    }\n\n    return this._easingName !== undefined ? this._easingName : this.parent && this.parent.getEasing() || null;\n  };\n  /**\n   * Set the easing for this animation.\n   */\n\n\n  Animator.prototype.easing = function (name) {\n    this._easingName = name;\n    return this;\n  };\n  /**\n   * Set the easing for this reversed animation.\n   */\n\n\n  Animator.prototype.easingReverse = function (name) {\n    this._reversedEasingName = name;\n    return this;\n  };\n  /**\n   * Add the \"from\" value for a specific property.\n   */\n\n\n  Animator.prototype.from = function (prop, val) {\n    this._addProp('from', prop, val);\n\n    return this;\n  };\n  /**\n   * Add the \"to\" value for a specific property.\n   */\n\n\n  Animator.prototype.to = function (prop, val, clearProperyAfterTransition) {\n    if (clearProperyAfterTransition === void 0) {\n      clearProperyAfterTransition = false;\n    }\n\n    var fx = this._addProp('to', prop, val);\n\n    if (clearProperyAfterTransition) {\n      // if this effect is a transform then clear the transform effect\n      // otherwise just clear the actual property\n      this.afterClearStyles(fx.trans ? ['transform', '-webkit-transform'] : [prop]);\n    }\n\n    return this;\n  };\n  /**\n   * Shortcut to add both the \"from\" and \"to\" for the same property.\n   */\n\n\n  Animator.prototype.fromTo = function (prop, fromVal, toVal, clearProperyAfterTransition) {\n    return this.from(prop, fromVal).to(prop, toVal, clearProperyAfterTransition);\n  };\n  /**\n   * NO DOM\n   */\n\n\n  Animator.prototype._getProp = function (name) {\n    if (this._fxProperties) {\n      return this._fxProperties.find(function (prop) {\n        return prop.effectName === name;\n      });\n    }\n\n    return undefined;\n  };\n\n  Animator.prototype._addProp = function (state, prop, val) {\n    var fxProp = this._getProp(prop);\n\n    if (!fxProp) {\n      // first time we've see this EffectProperty\n      var shouldTrans = TRANSFORM_PROPS[prop] === 1;\n      fxProp = {\n        effectName: prop,\n        trans: shouldTrans,\n        // add the will-change property for transforms or opacity\n        wc: shouldTrans ? 'transform' : prop\n      };\n      (this._fxProperties = this._fxProperties || []).push(fxProp);\n    } // add from/to EffectState to the EffectProperty\n\n\n    var fxState = {\n      val: val,\n      num: 0,\n      effectUnit: ''\n    };\n    fxProp[state] = fxState;\n\n    if (typeof val === 'string' && val.indexOf(' ') < 0) {\n      var r = val.match(CSS_VALUE_REGEX);\n\n      if (r) {\n        var num = parseFloat(r[1]);\n\n        if (!isNaN(num)) {\n          fxState.num = num;\n        }\n\n        fxState.effectUnit = r[0] !== r[2] ? r[2] : '';\n      }\n    } else if (typeof val === 'number') {\n      fxState.num = val;\n    }\n\n    return fxProp;\n  };\n  /**\n   * Add CSS class to this animation's elements\n   * before the animation begins.\n   */\n\n\n  Animator.prototype.beforeAddClass = function (className) {\n    (this._beforeAddClasses = this._beforeAddClasses || []).push(className);\n    return this;\n  };\n  /**\n   * Remove CSS class from this animation's elements\n   * before the animation begins.\n   */\n\n\n  Animator.prototype.beforeRemoveClass = function (className) {\n    (this._beforeRemoveClasses = this._beforeRemoveClasses || []).push(className);\n    return this;\n  };\n  /**\n   * Set CSS inline styles to this animation's elements\n   * before the animation begins.\n   */\n\n\n  Animator.prototype.beforeStyles = function (styles) {\n    this._beforeStyles = styles;\n    return this;\n  };\n  /**\n   * Clear CSS inline styles from this animation's elements\n   * before the animation begins.\n   */\n\n\n  Animator.prototype.beforeClearStyles = function (propertyNames) {\n    this._beforeStyles = this._beforeStyles || {};\n\n    for (var _i = 0, propertyNames_1 = propertyNames; _i < propertyNames_1.length; _i++) {\n      var prop = propertyNames_1[_i];\n      this._beforeStyles[prop] = '';\n    }\n\n    return this;\n  };\n  /**\n   * Add a function which contains DOM reads, which will run\n   * before the animation begins.\n   */\n\n\n  Animator.prototype.beforeAddRead = function (domReadFn) {\n    (this._readCallbacks = this._readCallbacks || []).push(domReadFn);\n    return this;\n  };\n  /**\n   * Add a function which contains DOM writes, which will run\n   * before the animation begins.\n   */\n\n\n  Animator.prototype.beforeAddWrite = function (domWriteFn) {\n    (this._writeCallbacks = this._writeCallbacks || []).push(domWriteFn);\n    return this;\n  };\n  /**\n   * Add CSS class to this animation's elements\n   * after the animation finishes.\n   */\n\n\n  Animator.prototype.afterAddClass = function (className) {\n    (this._afterAddClasses = this._afterAddClasses || []).push(className);\n    return this;\n  };\n  /**\n   * Remove CSS class from this animation's elements\n   * after the animation finishes.\n   */\n\n\n  Animator.prototype.afterRemoveClass = function (className) {\n    (this._afterRemoveClasses = this._afterRemoveClasses || []).push(className);\n    return this;\n  };\n  /**\n   * Set CSS inline styles to this animation's elements\n   * after the animation finishes.\n   */\n\n\n  Animator.prototype.afterStyles = function (styles) {\n    this._afterStyles = styles;\n    return this;\n  };\n  /**\n   * Clear CSS inline styles from this animation's elements\n   * after the animation finishes.\n   */\n\n\n  Animator.prototype.afterClearStyles = function (propertyNames) {\n    this._afterStyles = this._afterStyles || {};\n\n    for (var _i = 0, propertyNames_2 = propertyNames; _i < propertyNames_2.length; _i++) {\n      var prop = propertyNames_2[_i];\n      this._afterStyles[prop] = '';\n    }\n\n    return this;\n  };\n  /**\n   * Play the animation.\n   */\n\n\n  Animator.prototype.play = function (opts) {\n    var _this = this; // If the animation was already invalidated (it did finish), do nothing\n\n\n    if (this._destroyed) {\n      return;\n    } // this is the top level animation and is in full control\n    // of when the async play() should actually kick off\n    // if there is no duration then it'll set the TO property immediately\n    // if there is a duration, then it'll stage all animations at the\n    // FROM property and transition duration, wait a few frames, then\n    // kick off the animation by setting the TO property for each animation\n\n\n    this._isAsync = this._hasDuration(opts); // ensure all past transition end events have been cleared\n\n    this._clearAsync(); // recursively kicks off the correct progress step for each child animation\n    // ******** DOM WRITE ****************\n\n\n    this._playInit(opts); // doubling up RAFs since this animation was probably triggered\n    // from an input event, and just having one RAF would have this code\n    // run within the same frame as the triggering input event, and the\n    // input event probably already did way too much work for one frame\n\n\n    raf(function () {\n      raf(function () {\n        _this._playDomInspect(opts);\n      });\n    });\n  };\n\n  Animator.prototype.playAsync = function (opts) {\n    var _this = this;\n\n    return new Promise(function (resolve) {\n      _this.onFinish(resolve, {\n        oneTimeCallback: true,\n        clearExistingCallbacks: true\n      });\n\n      _this.play(opts);\n\n      return _this;\n    });\n  };\n\n  Animator.prototype.playSync = function () {\n    // If the animation was already invalidated (it did finish), do nothing\n    if (!this._destroyed) {\n      var opts = {\n        duration: 0\n      };\n      this._isAsync = false;\n\n      this._clearAsync();\n\n      this._playInit(opts);\n\n      this._playDomInspect(opts);\n    }\n  };\n  /**\n   * DOM WRITE\n   * RECURSION\n   */\n\n\n  Animator.prototype._playInit = function (opts) {\n    // always default that an animation does not tween\n    // a tween requires that an Animation class has an element\n    // and that it has at least one FROM/TO effect\n    // and that the FROM/TO effect can tween numeric values\n    this._hasTweenEffect = false;\n    this.isPlaying = true;\n    this.hasCompleted = false;\n    this._hasDur = this.getDuration(opts) > DURATION_MIN;\n    var children = this._childAnimations;\n\n    if (children) {\n      for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n        var child = children_1[_i]; // ******** DOM WRITE ****************\n\n        child._playInit(opts);\n      }\n    }\n\n    if (this._hasDur) {\n      // if there is a duration then we want to start at step 0\n      // ******** DOM WRITE ****************\n      this._progress(0); // add the will-change properties\n      // ******** DOM WRITE ****************\n\n\n      this._willChange(true);\n    }\n  };\n  /**\n   * DOM WRITE\n   * NO RECURSION\n   * ROOT ANIMATION\n   */\n\n\n  Animator.prototype._playDomInspect = function (opts) {\n    var _this = this; // fire off all the \"before\" function that have DOM READS in them\n    // elements will be in the DOM, however visibily hidden\n    // so we can read their dimensions if need be\n    // ******** DOM READ ****************\n    // ******** DOM WRITE ****************\n\n\n    this._beforeAnimation(); // for the root animation only\n    // set the async TRANSITION END event\n    // and run onFinishes when the transition ends\n\n\n    var dur = this.getDuration(opts);\n\n    if (this._isAsync) {\n      this._asyncEnd(dur, true);\n    } // ******** DOM WRITE ****************\n\n\n    this._playProgress(opts);\n\n    if (this._isAsync && !this._destroyed) {\n      // this animation has a duration so we need another RAF\n      // for the CSS TRANSITION properties to kick in\n      raf(function () {\n        _this._playToStep(1);\n      });\n    }\n  };\n  /**\n   * DOM WRITE\n   * RECURSION\n   */\n\n\n  Animator.prototype._playProgress = function (opts) {\n    var children = this._childAnimations;\n\n    if (children) {\n      for (var _i = 0, children_2 = children; _i < children_2.length; _i++) {\n        var child = children_2[_i]; // ******** DOM WRITE ****************\n\n        child._playProgress(opts);\n      }\n    }\n\n    if (this._hasDur) {\n      // set the CSS TRANSITION duration/easing\n      // ******** DOM WRITE ****************\n      this._setTrans(this.getDuration(opts), false);\n    } else {\n      // this animation does not have a duration, so it should not animate\n      // just go straight to the TO properties and call it done\n      // ******** DOM WRITE ****************\n      this._progress(1); // since there was no animation, immediately run the after\n      // ******** DOM WRITE ****************\n\n\n      this._setAfterStyles(); // this animation has no duration, so it has finished\n      // other animations could still be running\n\n\n      this._didFinish(true);\n    }\n  };\n  /**\n   * DOM WRITE\n   * RECURSION\n   */\n\n\n  Animator.prototype._playToStep = function (stepValue) {\n    if (!this._destroyed) {\n      var children = this._childAnimations;\n\n      if (children) {\n        for (var _i = 0, children_3 = children; _i < children_3.length; _i++) {\n          var child = children_3[_i]; // ******** DOM WRITE ****************\n\n          child._playToStep(stepValue);\n        }\n      }\n\n      if (this._hasDur) {\n        // browser had some time to render everything in place\n        // and the transition duration/easing is set\n        // now set the TO properties which will trigger the transition to begin\n        // ******** DOM WRITE ****************\n        this._progress(stepValue);\n      }\n    }\n  };\n  /**\n   * DOM WRITE\n   * NO RECURSION\n   * ROOT ANIMATION\n   */\n\n\n  Animator.prototype._asyncEnd = function (dur, shouldComplete) {\n    var self = this;\n\n    var onTransitionEnd = function onTransitionEnd() {\n      // congrats! a successful transition completed!\n      // ensure transition end events and timeouts have been cleared\n      self._clearAsync(); // ******** DOM WRITE ****************\n\n\n      self._playEnd(); // transition finished\n\n\n      self._didFinishAll(shouldComplete, true, false);\n    };\n\n    var onTransitionFallback = function onTransitionFallback() {\n      // oh noz! the transition end event didn't fire in time!\n      // instead the fallback timer when first\n      // if all goes well this fallback should never fire\n      // clear the other async end events from firing\n      self._timerId = undefined;\n\n      self._clearAsync(); // set the after styles\n      // ******** DOM WRITE ****************\n\n\n      self._playEnd(shouldComplete ? 1 : 0); // transition finished\n\n\n      self._didFinishAll(shouldComplete, true, false);\n    }; // set the TRANSITION END event on one of the transition elements\n\n\n    self._unregisterTrnsEnd = transitionEnd(self._transEl(), onTransitionEnd); // set a fallback timeout if the transition end event never fires, or is too slow\n    // transition end fallback: (animation duration + XXms)\n\n    self._timerId = setTimeout(onTransitionFallback, dur + TRANSITION_END_FALLBACK_PADDING_MS);\n  };\n  /**\n   * DOM WRITE\n   * RECURSION\n   */\n\n\n  Animator.prototype._playEnd = function (stepValue) {\n    var children = this._childAnimations;\n\n    if (children) {\n      for (var _i = 0, children_4 = children; _i < children_4.length; _i++) {\n        var child = children_4[_i]; // ******** DOM WRITE ****************\n\n        child._playEnd(stepValue);\n      }\n    }\n\n    if (this._hasDur) {\n      if (stepValue !== undefined) {\n        // too late to have a smooth animation, just finish it\n        // ******** DOM WRITE ****************\n        this._setTrans(0, true); // ensure the ending progress step gets rendered\n        // ******** DOM WRITE ****************\n\n\n        this._progress(stepValue);\n      } // set the after styles\n      // ******** DOM WRITE ****************\n\n\n      this._setAfterStyles(); // remove the will-change properties\n      // ******** DOM WRITE ****************\n\n\n      this._willChange(false);\n    }\n  };\n  /**\n   * NO DOM\n   * RECURSION\n   */\n\n\n  Animator.prototype._hasDuration = function (opts) {\n    if (this.getDuration(opts) > DURATION_MIN) {\n      return true;\n    }\n\n    var children = this._childAnimations;\n\n    if (children) {\n      for (var _i = 0, children_5 = children; _i < children_5.length; _i++) {\n        var child = children_5[_i];\n\n        if (child._hasDuration(opts)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  };\n  /**\n   * NO DOM\n   * RECURSION\n   */\n\n\n  Animator.prototype._hasDomReads = function () {\n    if (this._readCallbacks && this._readCallbacks.length > 0) {\n      return true;\n    }\n\n    var children = this._childAnimations;\n\n    if (children) {\n      for (var _i = 0, children_6 = children; _i < children_6.length; _i++) {\n        var child = children_6[_i];\n\n        if (child._hasDomReads()) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  };\n  /**\n   * Immediately stop at the end of the animation.\n   */\n\n\n  Animator.prototype.stop = function (stepValue) {\n    if (stepValue === void 0) {\n      stepValue = 1;\n    } // ensure all past transition end events have been cleared\n\n\n    this._clearAsync();\n\n    this._hasDur = true;\n\n    this._playEnd(stepValue);\n  };\n  /**\n   * NO DOM\n   * NO RECURSION\n   */\n\n\n  Animator.prototype._clearAsync = function () {\n    if (this._unregisterTrnsEnd) {\n      this._unregisterTrnsEnd();\n    }\n\n    if (this._timerId) {\n      clearTimeout(this._timerId);\n    }\n\n    this._timerId = this._unregisterTrnsEnd = undefined;\n  };\n  /**\n   * DOM WRITE\n   * NO RECURSION\n   */\n\n\n  Animator.prototype._progress = function (stepValue) {\n    // bread 'n butter\n    var val;\n    var elements = this._elements;\n    var effects = this._fxProperties;\n\n    if (!elements || elements.length === 0 || !effects || this._destroyed) {\n      return;\n    } // flip the number if we're going in reverse\n\n\n    if (this._isReverse) {\n      stepValue = 1 - stepValue;\n    }\n\n    var i = 0;\n    var j = 0;\n    var finalTransform = '';\n    var fx;\n\n    for (i = 0; i < effects.length; i++) {\n      fx = effects[i];\n\n      if (fx.from && fx.to) {\n        var fromNum = fx.from.num;\n        var toNum = fx.to.num;\n        var tweenEffect = fromNum !== toNum;\n\n        if (tweenEffect) {\n          this._hasTweenEffect = true;\n        }\n\n        if (stepValue === 0) {\n          // FROM\n          val = fx.from.val;\n        } else if (stepValue === 1) {\n          // TO\n          val = fx.to.val;\n        } else if (tweenEffect) {\n          // EVERYTHING IN BETWEEN\n          var valNum = (toNum - fromNum) * stepValue + fromNum;\n          var unit = fx.to.effectUnit;\n          val = valNum + unit;\n        }\n\n        if (val !== null) {\n          var prop = fx.effectName;\n\n          if (fx.trans) {\n            finalTransform += prop + '(' + val + ') ';\n          } else {\n            for (j = 0; j < elements.length; j++) {\n              // ******** DOM WRITE ****************\n              elements[j].style.setProperty(prop, val);\n            }\n          }\n        }\n      }\n    } // place all transforms on the same property\n\n\n    if (finalTransform.length > 0) {\n      if (!this._isReverse && stepValue !== 1 || this._isReverse && stepValue !== 0) {\n        finalTransform += 'translateZ(0px)';\n      }\n\n      for (i = 0; i < elements.length; i++) {\n        // ******** DOM WRITE ****************\n        elements[i].style.setProperty('transform', finalTransform);\n        elements[i].style.setProperty('-webkit-transform', finalTransform);\n      }\n    }\n  };\n  /**\n   * DOM WRITE\n   * NO RECURSION\n   */\n\n\n  Animator.prototype._setTrans = function (dur, forcedLinearEasing) {\n    // Transition is not enabled if there are not effects\n    var elements = this._elements;\n\n    if (!elements || elements.length === 0 || !this._fxProperties) {\n      return;\n    } // set the TRANSITION properties inline on the element\n\n\n    var easing = forcedLinearEasing ? 'linear' : this.getEasing();\n    var durString = dur + 'ms';\n\n    for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n      var style = elements_1[_i].style;\n\n      if (dur > 0) {\n        // ******** DOM WRITE ****************\n        style.transitionDuration = durString; // each animation can have a different easing\n\n        if (easing !== null) {\n          // ******** DOM WRITE ****************\n          style.transitionTimingFunction = easing;\n        }\n      } else {\n        style.transitionDuration = '0';\n      }\n    }\n  };\n  /**\n   * DOM READ\n   * DOM WRITE\n   * RECURSION\n   */\n\n\n  Animator.prototype._beforeAnimation = function () {\n    // fire off all the \"before\" function that have DOM READS in them\n    // elements will be in the DOM, however visibily hidden\n    // so we can read their dimensions if need be\n    // ******** DOM READ ****************\n    this._fireBeforeReadFunc(); // ******** DOM READS ABOVE / DOM WRITES BELOW ****************\n    // fire off all the \"before\" function that have DOM WRITES in them\n    // ******** DOM WRITE ****************\n\n\n    this._fireBeforeWriteFunc(); // stage all of the before css classes and inline styles\n    // ******** DOM WRITE ****************\n\n\n    this._setBeforeStyles();\n  };\n  /**\n   * DOM WRITE\n   * RECURSION\n   */\n\n\n  Animator.prototype._setBeforeStyles = function () {\n    var children = this._childAnimations;\n\n    if (children) {\n      for (var _i = 0, children_7 = children; _i < children_7.length; _i++) {\n        var child = children_7[_i];\n\n        child._setBeforeStyles();\n      }\n    }\n\n    var elements = this._elements; // before the animations have started\n    // only set before styles if animation is not reversed\n\n    if (!elements || elements.length === 0 || this._isReverse) {\n      return;\n    }\n\n    var addClasses = this._beforeAddClasses;\n    var removeClasses = this._beforeRemoveClasses;\n\n    for (var _a = 0, elements_2 = elements; _a < elements_2.length; _a++) {\n      var el = elements_2[_a];\n      var elementClassList = el.classList; // css classes to add before the animation\n\n      if (addClasses) {\n        for (var _b = 0, addClasses_1 = addClasses; _b < addClasses_1.length; _b++) {\n          var c = addClasses_1[_b]; // ******** DOM WRITE ****************\n\n          elementClassList.add(c);\n        }\n      } // css classes to remove before the animation\n\n\n      if (removeClasses) {\n        for (var _c = 0, removeClasses_1 = removeClasses; _c < removeClasses_1.length; _c++) {\n          var c = removeClasses_1[_c]; // ******** DOM WRITE ****************\n\n          elementClassList.remove(c);\n        }\n      } // inline styles to add before the animation\n\n\n      if (this._beforeStyles) {\n        for (var _d = 0, _e = Object.entries(this._beforeStyles); _d < _e.length; _d++) {\n          var _f = _e[_d],\n              key = _f[0],\n              value = _f[1]; // ******** DOM WRITE ****************\n\n          el.style.setProperty(key, value);\n        }\n      }\n    }\n  };\n  /**\n   * DOM READ\n   * RECURSION\n   */\n\n\n  Animator.prototype._fireBeforeReadFunc = function () {\n    var children = this._childAnimations;\n\n    if (children) {\n      for (var _i = 0, children_8 = children; _i < children_8.length; _i++) {\n        var child = children_8[_i]; // ******** DOM READ ****************\n\n        child._fireBeforeReadFunc();\n      }\n    }\n\n    var readFunctions = this._readCallbacks;\n\n    if (readFunctions) {\n      for (var _a = 0, readFunctions_1 = readFunctions; _a < readFunctions_1.length; _a++) {\n        var callback = readFunctions_1[_a]; // ******** DOM READ ****************\n\n        callback();\n      }\n    }\n  };\n  /**\n   * DOM WRITE\n   * RECURSION\n   */\n\n\n  Animator.prototype._fireBeforeWriteFunc = function () {\n    var children = this._childAnimations;\n\n    if (children) {\n      for (var _i = 0, children_9 = children; _i < children_9.length; _i++) {\n        var child = children_9[_i]; // ******** DOM WRITE ****************\n\n        child._fireBeforeWriteFunc();\n      }\n    }\n\n    var writeFunctions = this._writeCallbacks;\n\n    if (writeFunctions) {\n      for (var _a = 0, writeFunctions_1 = writeFunctions; _a < writeFunctions_1.length; _a++) {\n        var callback = writeFunctions_1[_a]; // ******** DOM WRITE ****************\n\n        callback();\n      }\n    }\n  };\n  /**\n   * DOM WRITE\n   */\n\n\n  Animator.prototype._setAfterStyles = function () {\n    var elements = this._elements;\n\n    if (!elements) {\n      return;\n    }\n\n    for (var _i = 0, elements_3 = elements; _i < elements_3.length; _i++) {\n      var el = elements_3[_i];\n      var elementClassList = el.classList; // remove the transition duration/easing\n      // ******** DOM WRITE ****************\n\n      el.style.transitionDuration = el.style.transitionTimingFunction = '';\n\n      if (this._isReverse) {\n        // finished in reverse direction\n        // css classes that were added before the animation should be removed\n        var beforeAddClasses = this._beforeAddClasses;\n\n        if (beforeAddClasses) {\n          for (var _a = 0, beforeAddClasses_1 = beforeAddClasses; _a < beforeAddClasses_1.length; _a++) {\n            var c = beforeAddClasses_1[_a];\n            elementClassList.remove(c);\n          }\n        } // css classes that were removed before the animation should be added\n\n\n        var beforeRemoveClasses = this._beforeRemoveClasses;\n\n        if (beforeRemoveClasses) {\n          for (var _b = 0, beforeRemoveClasses_1 = beforeRemoveClasses; _b < beforeRemoveClasses_1.length; _b++) {\n            var c = beforeRemoveClasses_1[_b];\n            elementClassList.add(c);\n          }\n        } // inline styles that were added before the animation should be removed\n\n\n        var beforeStyles = this._beforeStyles;\n\n        if (beforeStyles) {\n          for (var _c = 0, _d = Object.keys(beforeStyles); _c < _d.length; _c++) {\n            var propName = _d[_c]; // ******** DOM WRITE ****************\n\n            el.style.removeProperty(propName);\n          }\n        }\n      } else {\n        // finished in forward direction\n        // css classes to add after the animation\n        var afterAddClasses = this._afterAddClasses;\n\n        if (afterAddClasses) {\n          for (var _e = 0, afterAddClasses_1 = afterAddClasses; _e < afterAddClasses_1.length; _e++) {\n            var c = afterAddClasses_1[_e]; // ******** DOM WRITE ****************\n\n            elementClassList.add(c);\n          }\n        } // css classes to remove after the animation\n\n\n        var afterRemoveClasses = this._afterRemoveClasses;\n\n        if (afterRemoveClasses) {\n          for (var _f = 0, afterRemoveClasses_1 = afterRemoveClasses; _f < afterRemoveClasses_1.length; _f++) {\n            var c = afterRemoveClasses_1[_f]; // ******** DOM WRITE ****************\n\n            elementClassList.remove(c);\n          }\n        } // inline styles to add after the animation\n\n\n        var afterStyles = this._afterStyles;\n\n        if (afterStyles) {\n          for (var _g = 0, _h = Object.entries(afterStyles); _g < _h.length; _g++) {\n            var _j = _h[_g],\n                key = _j[0],\n                value = _j[1];\n            el.style.setProperty(key, value);\n          }\n        }\n      }\n    }\n  };\n  /**\n   * DOM WRITE\n   * NO RECURSION\n   */\n\n\n  Animator.prototype._willChange = function (addWillChange) {\n    var wc;\n    var effects = this._fxProperties;\n    var willChange;\n\n    if (addWillChange && effects) {\n      wc = [];\n\n      for (var _i = 0, effects_1 = effects; _i < effects_1.length; _i++) {\n        var effect = effects_1[_i];\n        var propWC = effect.wc;\n\n        if (propWC === 'webkitTransform') {\n          wc.push('transform', '-webkit-transform');\n        } else if (propWC !== undefined) {\n          wc.push(propWC);\n        }\n      }\n\n      willChange = wc.join(',');\n    } else {\n      willChange = '';\n    }\n\n    var elements = this._elements;\n\n    if (elements) {\n      for (var _a = 0, elements_4 = elements; _a < elements_4.length; _a++) {\n        var el = elements_4[_a]; // ******** DOM WRITE ****************\n\n        el.style.setProperty('will-change', willChange);\n      }\n    }\n  };\n  /**\n   * Start the animation with a user controlled progress.\n   */\n\n\n  Animator.prototype.progressStart = function () {\n    // ensure all past transition end events have been cleared\n    this._clearAsync(); // ******** DOM READ/WRITE ****************\n\n\n    this._beforeAnimation(); // ******** DOM WRITE ****************\n\n\n    this._progressStart();\n  };\n  /**\n   * DOM WRITE\n   * RECURSION\n   */\n\n\n  Animator.prototype._progressStart = function () {\n    var children = this._childAnimations;\n\n    if (children) {\n      for (var _i = 0, children_10 = children; _i < children_10.length; _i++) {\n        var child = children_10[_i]; // ******** DOM WRITE ****************\n\n        child._progressStart();\n      }\n    } // force no duration, linear easing\n    // ******** DOM WRITE ****************\n\n\n    this._setTrans(0, true); // ******** DOM WRITE ****************\n\n\n    this._willChange(true);\n  };\n  /**\n   * Set the progress step for this animation.\n   * progressStep() is not debounced, so it should not be called faster than 60FPS.\n   */\n\n\n  Animator.prototype.progressStep = function (stepValue) {\n    // only update if the last update was more than 16ms ago\n    stepValue = Math.min(1, Math.max(0, stepValue));\n    var children = this._childAnimations;\n\n    if (children) {\n      for (var _i = 0, children_11 = children; _i < children_11.length; _i++) {\n        var child = children_11[_i]; // ******** DOM WRITE ****************\n\n        child.progressStep(stepValue);\n      }\n    } // ******** DOM WRITE ****************\n\n\n    this._progress(stepValue);\n  };\n  /**\n   * End the progress animation.\n   */\n\n\n  Animator.prototype.progressEnd = function (shouldComplete, currentStepValue, dur) {\n    var _this = this;\n\n    if (dur === void 0) {\n      dur = -1;\n    }\n\n    if (this._isReverse) {\n      // if the animation is going in reverse then\n      // flip the step value: 0 becomes 1, 1 becomes 0\n      currentStepValue = 1 - currentStepValue;\n    }\n\n    var stepValue = shouldComplete ? 1 : 0;\n    var diff = Math.abs(currentStepValue - stepValue);\n\n    if (dur < 0) {\n      dur = this._duration || 0;\n    } else if (diff < 0.05) {\n      dur = 0;\n    }\n\n    this._isAsync = dur > 30;\n\n    this._progressEnd(shouldComplete, stepValue, dur, this._isAsync);\n\n    if (this._isAsync) {\n      // for the root animation only\n      // set the async TRANSITION END event\n      // and run onFinishes when the transition ends\n      // ******** DOM WRITE ****************\n      this._asyncEnd(dur, shouldComplete); // this animation has a duration so we need another RAF\n      // for the CSS TRANSITION properties to kick in\n\n\n      if (!this._destroyed) {\n        raf(function () {\n          _this._playToStep(stepValue);\n        });\n      }\n    }\n  };\n  /**\n   * DOM WRITE\n   * RECURSION\n   */\n\n\n  Animator.prototype._progressEnd = function (shouldComplete, stepValue, dur, isAsync) {\n    var children = this._childAnimations;\n\n    if (children) {\n      for (var _i = 0, children_12 = children; _i < children_12.length; _i++) {\n        var child = children_12[_i]; // ******** DOM WRITE ****************\n\n        child._progressEnd(shouldComplete, stepValue, dur, isAsync);\n      }\n    }\n\n    if (!isAsync) {\n      // stop immediately\n      // set all the animations to their final position\n      // ******** DOM WRITE ****************\n      this._progress(stepValue);\n\n      this._willChange(false);\n\n      this._setAfterStyles();\n\n      this._didFinish(shouldComplete);\n    } else {\n      // animate it back to it's ending position\n      this.isPlaying = true;\n      this.hasCompleted = false;\n      this._hasDur = true; // ******** DOM WRITE ****************\n\n      this._willChange(true);\n\n      this._setTrans(dur, false);\n    }\n  };\n  /**\n   * Add a callback to fire when the animation has finished.\n   */\n\n\n  Animator.prototype.onFinish = function (callback, opts) {\n    if (opts && opts.clearExistingCallbacks) {\n      this._onFinishCallbacks = this._onFinishOneTimeCallbacks = undefined;\n    }\n\n    if (opts && opts.oneTimeCallback) {\n      this._onFinishOneTimeCallbacks = this._onFinishOneTimeCallbacks || [];\n\n      this._onFinishOneTimeCallbacks.push(callback);\n    } else {\n      this._onFinishCallbacks = this._onFinishCallbacks || [];\n\n      this._onFinishCallbacks.push(callback);\n    }\n\n    return this;\n  };\n  /**\n   * NO DOM\n   * RECURSION\n   */\n\n\n  Animator.prototype._didFinishAll = function (hasCompleted, finishAsyncAnimations, finishNoDurationAnimations) {\n    var children = this._childAnimations;\n\n    if (children) {\n      for (var _i = 0, children_13 = children; _i < children_13.length; _i++) {\n        var child = children_13[_i];\n\n        child._didFinishAll(hasCompleted, finishAsyncAnimations, finishNoDurationAnimations);\n      }\n    }\n\n    if (finishAsyncAnimations && this._isAsync || finishNoDurationAnimations && !this._isAsync) {\n      this._didFinish(hasCompleted);\n    }\n  };\n  /**\n   * NO RECURSION\n   */\n\n\n  Animator.prototype._didFinish = function (hasCompleted) {\n    this.isPlaying = false;\n    this.hasCompleted = hasCompleted;\n\n    if (this._onFinishCallbacks) {\n      // run all finish callbacks\n      for (var _i = 0, _a = this._onFinishCallbacks; _i < _a.length; _i++) {\n        var callback = _a[_i];\n        callback(this);\n      }\n    }\n\n    if (this._onFinishOneTimeCallbacks) {\n      // run all \"onetime\" finish callbacks\n      for (var _b = 0, _c = this._onFinishOneTimeCallbacks; _b < _c.length; _b++) {\n        var callback = _c[_b];\n        callback(this);\n      }\n\n      this._onFinishOneTimeCallbacks.length = 0;\n    }\n  };\n  /**\n   * Reverse the animation.\n   */\n\n\n  Animator.prototype.reverse = function (shouldReverse) {\n    if (shouldReverse === void 0) {\n      shouldReverse = true;\n    }\n\n    var children = this._childAnimations;\n\n    if (children) {\n      for (var _i = 0, children_14 = children; _i < children_14.length; _i++) {\n        var child = children_14[_i];\n        child.reverse(shouldReverse);\n      }\n    }\n\n    this._isReverse = !!shouldReverse;\n    return this;\n  };\n  /**\n   * Recursively destroy this animation and all child animations.\n   */\n\n\n  Animator.prototype.destroy = function () {\n    this._didFinish(false);\n\n    this._destroyed = true;\n    var children = this._childAnimations;\n\n    if (children) {\n      for (var _i = 0, children_15 = children; _i < children_15.length; _i++) {\n        var child = children_15[_i];\n        child.destroy();\n      }\n    }\n\n    this._clearAsync();\n\n    if (this._elements) {\n      this._elements.length = 0;\n    }\n\n    if (this._readCallbacks) {\n      this._readCallbacks.length = 0;\n    }\n\n    if (this._writeCallbacks) {\n      this._writeCallbacks.length = 0;\n    }\n\n    this.parent = undefined;\n\n    if (this._childAnimations) {\n      this._childAnimations.length = 0;\n    }\n\n    if (this._onFinishCallbacks) {\n      this._onFinishCallbacks.length = 0;\n    }\n\n    if (this._onFinishOneTimeCallbacks) {\n      this._onFinishOneTimeCallbacks.length = 0;\n    }\n  };\n  /**\n   * NO DOM\n   */\n\n\n  Animator.prototype._transEl = function () {\n    // get the lowest level element that has an Animator\n    var children = this._childAnimations;\n\n    if (children) {\n      for (var _i = 0, children_16 = children; _i < children_16.length; _i++) {\n        var child = children_16[_i];\n\n        var targetEl = child._transEl();\n\n        if (targetEl) {\n          return targetEl;\n        }\n      }\n    }\n\n    return this._hasTweenEffect && this._hasDur && this._elements !== undefined && this._elements.length > 0 ? this._elements[0] : null;\n  };\n\n  return Animator;\n}();\n\nvar create = function create(animationBuilder, baseEl, opts) {\n  if (animationBuilder) {\n    return animationBuilder(Animator, baseEl, opts);\n  }\n\n  return Promise.resolve(new Animator());\n};\n\nexport { create };","map":{"version":3,"sources":["/Users/timherbert/OneDrive/school/cs480/LCSCWorkoutApp/node_modules/@ionic/core/dist/esm-es5/index-69c37885.js"],"names":["transitionEnd","el","callback","unRegTrans","opts","passive","unregister","onTransitionEnd","ev","target","addEventListener","removeEventListener","CSS_VALUE_REGEX","DURATION_MIN","TRANSITION_END_FALLBACK_PADDING_MS","TRANSFORM_PROPS","win","window","raf","requestAnimationFrame","bind","f","Date","now","Animator","_hasDur","_hasTweenEffect","_isAsync","_isReverse","_destroyed","hasChildren","isPlaying","hasCompleted","prototype","addElement","length","i","_addEl","nodeType","_elements","push","add","childAnimation","parent","_childAnimations","getDuration","duration","undefined","_duration","isRoot","milliseconds","getEasing","_reversedEasingName","_easingName","easing","name","easingReverse","from","prop","val","_addProp","to","clearProperyAfterTransition","fx","afterClearStyles","trans","fromTo","fromVal","toVal","_getProp","_fxProperties","find","effectName","state","fxProp","shouldTrans","wc","fxState","num","effectUnit","indexOf","r","match","parseFloat","isNaN","beforeAddClass","className","_beforeAddClasses","beforeRemoveClass","_beforeRemoveClasses","beforeStyles","styles","_beforeStyles","beforeClearStyles","propertyNames","_i","propertyNames_1","beforeAddRead","domReadFn","_readCallbacks","beforeAddWrite","domWriteFn","_writeCallbacks","afterAddClass","_afterAddClasses","afterRemoveClass","_afterRemoveClasses","afterStyles","_afterStyles","propertyNames_2","play","_this","_hasDuration","_clearAsync","_playInit","_playDomInspect","playAsync","Promise","resolve","onFinish","oneTimeCallback","clearExistingCallbacks","playSync","children","children_1","child","_progress","_willChange","_beforeAnimation","dur","_asyncEnd","_playProgress","_playToStep","children_2","_setTrans","_setAfterStyles","_didFinish","stepValue","children_3","shouldComplete","self","_playEnd","_didFinishAll","onTransitionFallback","_timerId","_unregisterTrnsEnd","_transEl","setTimeout","children_4","children_5","_hasDomReads","children_6","stop","clearTimeout","elements","effects","j","finalTransform","fromNum","toNum","tweenEffect","valNum","unit","style","setProperty","forcedLinearEasing","durString","elements_1","transitionDuration","transitionTimingFunction","_fireBeforeReadFunc","_fireBeforeWriteFunc","_setBeforeStyles","children_7","addClasses","removeClasses","_a","elements_2","elementClassList","classList","_b","addClasses_1","c","_c","removeClasses_1","remove","_d","_e","Object","entries","_f","key","value","children_8","readFunctions","readFunctions_1","children_9","writeFunctions","writeFunctions_1","elements_3","beforeAddClasses","beforeAddClasses_1","beforeRemoveClasses","beforeRemoveClasses_1","keys","propName","removeProperty","afterAddClasses","afterAddClasses_1","afterRemoveClasses","afterRemoveClasses_1","_g","_h","_j","addWillChange","willChange","effects_1","effect","propWC","join","elements_4","progressStart","_progressStart","children_10","progressStep","Math","min","max","children_11","progressEnd","currentStepValue","diff","abs","_progressEnd","isAsync","children_12","_onFinishCallbacks","_onFinishOneTimeCallbacks","finishAsyncAnimations","finishNoDurationAnimations","children_13","reverse","shouldReverse","children_14","destroy","children_15","children_16","targetEl","create","animationBuilder","baseEl"],"mappings":"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","sourcesContent":["var transitionEnd = function (el, callback) {\n    var unRegTrans;\n    var opts = { passive: true };\n    var unregister = function () {\n        if (unRegTrans) {\n            unRegTrans();\n        }\n    };\n    var onTransitionEnd = function (ev) {\n        if (el === ev.target) {\n            unregister();\n            callback(ev);\n        }\n    };\n    if (el) {\n        el.addEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n        el.addEventListener('transitionend', onTransitionEnd, opts);\n        unRegTrans = function () {\n            el.removeEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n            el.removeEventListener('transitionend', onTransitionEnd, opts);\n        };\n    }\n    return unregister;\n};\nvar CSS_VALUE_REGEX = /(^-?\\d*\\.?\\d*)(.*)/;\nvar DURATION_MIN = 32;\nvar TRANSITION_END_FALLBACK_PADDING_MS = 400;\nvar TRANSFORM_PROPS = {\n    'translateX': 1,\n    'translateY': 1,\n    'translateZ': 1,\n    'scale': 1,\n    'scaleX': 1,\n    'scaleY': 1,\n    'scaleZ': 1,\n    'rotate': 1,\n    'rotateX': 1,\n    'rotateY': 1,\n    'rotateZ': 1,\n    'skewX': 1,\n    'skewY': 1,\n    'perspective': 1\n};\nvar win = typeof window !== 'undefined' ? window : {};\nvar raf = win.requestAnimationFrame\n    ? win.requestAnimationFrame.bind(win)\n    : function (f) { return f(Date.now()); };\nvar Animator = /** @class */ (function () {\n    function Animator() {\n        this._hasDur = false;\n        this._hasTweenEffect = false;\n        this._isAsync = false;\n        this._isReverse = false;\n        this._destroyed = false;\n        this.hasChildren = false;\n        this.isPlaying = false;\n        this.hasCompleted = false;\n    }\n    Animator.prototype.addElement = function (el) {\n        if (el != null) {\n            if (el.length > 0) {\n                for (var i = 0; i < el.length; i++) {\n                    this._addEl(el[i]);\n                }\n            }\n            else {\n                this._addEl(el);\n            }\n        }\n        return this;\n    };\n    /**\n     * NO DOM\n     */\n    Animator.prototype._addEl = function (el) {\n        if (el.nodeType === 1) {\n            (this._elements = this._elements || []).push(el);\n        }\n    };\n    /**\n     * Add a child animation to this animation.\n     */\n    Animator.prototype.add = function (childAnimation) {\n        childAnimation.parent = this;\n        this.hasChildren = true;\n        (this._childAnimations = this._childAnimations || []).push(childAnimation);\n        return this;\n    };\n    /**\n     * Get the duration of this animation. If this animation does\n     * not have a duration, then it'll get the duration from its parent.\n     */\n    Animator.prototype.getDuration = function (opts) {\n        if (opts && opts.duration !== undefined) {\n            return opts.duration;\n        }\n        else if (this._duration !== undefined) {\n            return this._duration;\n        }\n        else if (this.parent) {\n            return this.parent.getDuration();\n        }\n        return 0;\n    };\n    /**\n     * Returns if the animation is a root one.\n     */\n    Animator.prototype.isRoot = function () {\n        return !this.parent;\n    };\n    /**\n     * Set the duration for this animation.\n     */\n    Animator.prototype.duration = function (milliseconds) {\n        this._duration = milliseconds;\n        return this;\n    };\n    /**\n     * Get the easing of this animation. If this animation does\n     * not have an easing, then it'll get the easing from its parent.\n     */\n    Animator.prototype.getEasing = function () {\n        if (this._isReverse && this._reversedEasingName !== undefined) {\n            return this._reversedEasingName;\n        }\n        return this._easingName !== undefined ? this._easingName : (this.parent && this.parent.getEasing()) || null;\n    };\n    /**\n     * Set the easing for this animation.\n     */\n    Animator.prototype.easing = function (name) {\n        this._easingName = name;\n        return this;\n    };\n    /**\n     * Set the easing for this reversed animation.\n     */\n    Animator.prototype.easingReverse = function (name) {\n        this._reversedEasingName = name;\n        return this;\n    };\n    /**\n     * Add the \"from\" value for a specific property.\n     */\n    Animator.prototype.from = function (prop, val) {\n        this._addProp('from', prop, val);\n        return this;\n    };\n    /**\n     * Add the \"to\" value for a specific property.\n     */\n    Animator.prototype.to = function (prop, val, clearProperyAfterTransition) {\n        if (clearProperyAfterTransition === void 0) { clearProperyAfterTransition = false; }\n        var fx = this._addProp('to', prop, val);\n        if (clearProperyAfterTransition) {\n            // if this effect is a transform then clear the transform effect\n            // otherwise just clear the actual property\n            this.afterClearStyles(fx.trans ? ['transform', '-webkit-transform'] : [prop]);\n        }\n        return this;\n    };\n    /**\n     * Shortcut to add both the \"from\" and \"to\" for the same property.\n     */\n    Animator.prototype.fromTo = function (prop, fromVal, toVal, clearProperyAfterTransition) {\n        return this.from(prop, fromVal).to(prop, toVal, clearProperyAfterTransition);\n    };\n    /**\n     * NO DOM\n     */\n    Animator.prototype._getProp = function (name) {\n        if (this._fxProperties) {\n            return this._fxProperties.find(function (prop) { return prop.effectName === name; });\n        }\n        return undefined;\n    };\n    Animator.prototype._addProp = function (state, prop, val) {\n        var fxProp = this._getProp(prop);\n        if (!fxProp) {\n            // first time we've see this EffectProperty\n            var shouldTrans = (TRANSFORM_PROPS[prop] === 1);\n            fxProp = {\n                effectName: prop,\n                trans: shouldTrans,\n                // add the will-change property for transforms or opacity\n                wc: (shouldTrans ? 'transform' : prop)\n            };\n            (this._fxProperties = this._fxProperties || []).push(fxProp);\n        }\n        // add from/to EffectState to the EffectProperty\n        var fxState = {\n            val: val,\n            num: 0,\n            effectUnit: '',\n        };\n        fxProp[state] = fxState;\n        if (typeof val === 'string' && val.indexOf(' ') < 0) {\n            var r = val.match(CSS_VALUE_REGEX);\n            if (r) {\n                var num = parseFloat(r[1]);\n                if (!isNaN(num)) {\n                    fxState.num = num;\n                }\n                fxState.effectUnit = (r[0] !== r[2] ? r[2] : '');\n            }\n        }\n        else if (typeof val === 'number') {\n            fxState.num = val;\n        }\n        return fxProp;\n    };\n    /**\n     * Add CSS class to this animation's elements\n     * before the animation begins.\n     */\n    Animator.prototype.beforeAddClass = function (className) {\n        (this._beforeAddClasses = this._beforeAddClasses || []).push(className);\n        return this;\n    };\n    /**\n     * Remove CSS class from this animation's elements\n     * before the animation begins.\n     */\n    Animator.prototype.beforeRemoveClass = function (className) {\n        (this._beforeRemoveClasses = this._beforeRemoveClasses || []).push(className);\n        return this;\n    };\n    /**\n     * Set CSS inline styles to this animation's elements\n     * before the animation begins.\n     */\n    Animator.prototype.beforeStyles = function (styles) {\n        this._beforeStyles = styles;\n        return this;\n    };\n    /**\n     * Clear CSS inline styles from this animation's elements\n     * before the animation begins.\n     */\n    Animator.prototype.beforeClearStyles = function (propertyNames) {\n        this._beforeStyles = this._beforeStyles || {};\n        for (var _i = 0, propertyNames_1 = propertyNames; _i < propertyNames_1.length; _i++) {\n            var prop = propertyNames_1[_i];\n            this._beforeStyles[prop] = '';\n        }\n        return this;\n    };\n    /**\n     * Add a function which contains DOM reads, which will run\n     * before the animation begins.\n     */\n    Animator.prototype.beforeAddRead = function (domReadFn) {\n        (this._readCallbacks = this._readCallbacks || []).push(domReadFn);\n        return this;\n    };\n    /**\n     * Add a function which contains DOM writes, which will run\n     * before the animation begins.\n     */\n    Animator.prototype.beforeAddWrite = function (domWriteFn) {\n        (this._writeCallbacks = this._writeCallbacks || []).push(domWriteFn);\n        return this;\n    };\n    /**\n     * Add CSS class to this animation's elements\n     * after the animation finishes.\n     */\n    Animator.prototype.afterAddClass = function (className) {\n        (this._afterAddClasses = this._afterAddClasses || []).push(className);\n        return this;\n    };\n    /**\n     * Remove CSS class from this animation's elements\n     * after the animation finishes.\n     */\n    Animator.prototype.afterRemoveClass = function (className) {\n        (this._afterRemoveClasses = this._afterRemoveClasses || []).push(className);\n        return this;\n    };\n    /**\n     * Set CSS inline styles to this animation's elements\n     * after the animation finishes.\n     */\n    Animator.prototype.afterStyles = function (styles) {\n        this._afterStyles = styles;\n        return this;\n    };\n    /**\n     * Clear CSS inline styles from this animation's elements\n     * after the animation finishes.\n     */\n    Animator.prototype.afterClearStyles = function (propertyNames) {\n        this._afterStyles = this._afterStyles || {};\n        for (var _i = 0, propertyNames_2 = propertyNames; _i < propertyNames_2.length; _i++) {\n            var prop = propertyNames_2[_i];\n            this._afterStyles[prop] = '';\n        }\n        return this;\n    };\n    /**\n     * Play the animation.\n     */\n    Animator.prototype.play = function (opts) {\n        var _this = this;\n        // If the animation was already invalidated (it did finish), do nothing\n        if (this._destroyed) {\n            return;\n        }\n        // this is the top level animation and is in full control\n        // of when the async play() should actually kick off\n        // if there is no duration then it'll set the TO property immediately\n        // if there is a duration, then it'll stage all animations at the\n        // FROM property and transition duration, wait a few frames, then\n        // kick off the animation by setting the TO property for each animation\n        this._isAsync = this._hasDuration(opts);\n        // ensure all past transition end events have been cleared\n        this._clearAsync();\n        // recursively kicks off the correct progress step for each child animation\n        // ******** DOM WRITE ****************\n        this._playInit(opts);\n        // doubling up RAFs since this animation was probably triggered\n        // from an input event, and just having one RAF would have this code\n        // run within the same frame as the triggering input event, and the\n        // input event probably already did way too much work for one frame\n        raf(function () {\n            raf(function () {\n                _this._playDomInspect(opts);\n            });\n        });\n    };\n    Animator.prototype.playAsync = function (opts) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this.onFinish(resolve, { oneTimeCallback: true, clearExistingCallbacks: true });\n            _this.play(opts);\n            return _this;\n        });\n    };\n    Animator.prototype.playSync = function () {\n        // If the animation was already invalidated (it did finish), do nothing\n        if (!this._destroyed) {\n            var opts = { duration: 0 };\n            this._isAsync = false;\n            this._clearAsync();\n            this._playInit(opts);\n            this._playDomInspect(opts);\n        }\n    };\n    /**\n     * DOM WRITE\n     * RECURSION\n     */\n    Animator.prototype._playInit = function (opts) {\n        // always default that an animation does not tween\n        // a tween requires that an Animation class has an element\n        // and that it has at least one FROM/TO effect\n        // and that the FROM/TO effect can tween numeric values\n        this._hasTweenEffect = false;\n        this.isPlaying = true;\n        this.hasCompleted = false;\n        this._hasDur = (this.getDuration(opts) > DURATION_MIN);\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                var child = children_1[_i];\n                // ******** DOM WRITE ****************\n                child._playInit(opts);\n            }\n        }\n        if (this._hasDur) {\n            // if there is a duration then we want to start at step 0\n            // ******** DOM WRITE ****************\n            this._progress(0);\n            // add the will-change properties\n            // ******** DOM WRITE ****************\n            this._willChange(true);\n        }\n    };\n    /**\n     * DOM WRITE\n     * NO RECURSION\n     * ROOT ANIMATION\n     */\n    Animator.prototype._playDomInspect = function (opts) {\n        var _this = this;\n        // fire off all the \"before\" function that have DOM READS in them\n        // elements will be in the DOM, however visibily hidden\n        // so we can read their dimensions if need be\n        // ******** DOM READ ****************\n        // ******** DOM WRITE ****************\n        this._beforeAnimation();\n        // for the root animation only\n        // set the async TRANSITION END event\n        // and run onFinishes when the transition ends\n        var dur = this.getDuration(opts);\n        if (this._isAsync) {\n            this._asyncEnd(dur, true);\n        }\n        // ******** DOM WRITE ****************\n        this._playProgress(opts);\n        if (this._isAsync && !this._destroyed) {\n            // this animation has a duration so we need another RAF\n            // for the CSS TRANSITION properties to kick in\n            raf(function () {\n                _this._playToStep(1);\n            });\n        }\n    };\n    /**\n     * DOM WRITE\n     * RECURSION\n     */\n    Animator.prototype._playProgress = function (opts) {\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_2 = children; _i < children_2.length; _i++) {\n                var child = children_2[_i];\n                // ******** DOM WRITE ****************\n                child._playProgress(opts);\n            }\n        }\n        if (this._hasDur) {\n            // set the CSS TRANSITION duration/easing\n            // ******** DOM WRITE ****************\n            this._setTrans(this.getDuration(opts), false);\n        }\n        else {\n            // this animation does not have a duration, so it should not animate\n            // just go straight to the TO properties and call it done\n            // ******** DOM WRITE ****************\n            this._progress(1);\n            // since there was no animation, immediately run the after\n            // ******** DOM WRITE ****************\n            this._setAfterStyles();\n            // this animation has no duration, so it has finished\n            // other animations could still be running\n            this._didFinish(true);\n        }\n    };\n    /**\n     * DOM WRITE\n     * RECURSION\n     */\n    Animator.prototype._playToStep = function (stepValue) {\n        if (!this._destroyed) {\n            var children = this._childAnimations;\n            if (children) {\n                for (var _i = 0, children_3 = children; _i < children_3.length; _i++) {\n                    var child = children_3[_i];\n                    // ******** DOM WRITE ****************\n                    child._playToStep(stepValue);\n                }\n            }\n            if (this._hasDur) {\n                // browser had some time to render everything in place\n                // and the transition duration/easing is set\n                // now set the TO properties which will trigger the transition to begin\n                // ******** DOM WRITE ****************\n                this._progress(stepValue);\n            }\n        }\n    };\n    /**\n     * DOM WRITE\n     * NO RECURSION\n     * ROOT ANIMATION\n     */\n    Animator.prototype._asyncEnd = function (dur, shouldComplete) {\n        var self = this;\n        var onTransitionEnd = function () {\n            // congrats! a successful transition completed!\n            // ensure transition end events and timeouts have been cleared\n            self._clearAsync();\n            // ******** DOM WRITE ****************\n            self._playEnd();\n            // transition finished\n            self._didFinishAll(shouldComplete, true, false);\n        };\n        var onTransitionFallback = function () {\n            // oh noz! the transition end event didn't fire in time!\n            // instead the fallback timer when first\n            // if all goes well this fallback should never fire\n            // clear the other async end events from firing\n            self._timerId = undefined;\n            self._clearAsync();\n            // set the after styles\n            // ******** DOM WRITE ****************\n            self._playEnd(shouldComplete ? 1 : 0);\n            // transition finished\n            self._didFinishAll(shouldComplete, true, false);\n        };\n        // set the TRANSITION END event on one of the transition elements\n        self._unregisterTrnsEnd = transitionEnd(self._transEl(), onTransitionEnd);\n        // set a fallback timeout if the transition end event never fires, or is too slow\n        // transition end fallback: (animation duration + XXms)\n        self._timerId = setTimeout(onTransitionFallback, (dur + TRANSITION_END_FALLBACK_PADDING_MS));\n    };\n    /**\n     * DOM WRITE\n     * RECURSION\n     */\n    Animator.prototype._playEnd = function (stepValue) {\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_4 = children; _i < children_4.length; _i++) {\n                var child = children_4[_i];\n                // ******** DOM WRITE ****************\n                child._playEnd(stepValue);\n            }\n        }\n        if (this._hasDur) {\n            if (stepValue !== undefined) {\n                // too late to have a smooth animation, just finish it\n                // ******** DOM WRITE ****************\n                this._setTrans(0, true);\n                // ensure the ending progress step gets rendered\n                // ******** DOM WRITE ****************\n                this._progress(stepValue);\n            }\n            // set the after styles\n            // ******** DOM WRITE ****************\n            this._setAfterStyles();\n            // remove the will-change properties\n            // ******** DOM WRITE ****************\n            this._willChange(false);\n        }\n    };\n    /**\n     * NO DOM\n     * RECURSION\n     */\n    Animator.prototype._hasDuration = function (opts) {\n        if (this.getDuration(opts) > DURATION_MIN) {\n            return true;\n        }\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_5 = children; _i < children_5.length; _i++) {\n                var child = children_5[_i];\n                if (child._hasDuration(opts)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * NO DOM\n     * RECURSION\n     */\n    Animator.prototype._hasDomReads = function () {\n        if (this._readCallbacks && this._readCallbacks.length > 0) {\n            return true;\n        }\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_6 = children; _i < children_6.length; _i++) {\n                var child = children_6[_i];\n                if (child._hasDomReads()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * Immediately stop at the end of the animation.\n     */\n    Animator.prototype.stop = function (stepValue) {\n        if (stepValue === void 0) { stepValue = 1; }\n        // ensure all past transition end events have been cleared\n        this._clearAsync();\n        this._hasDur = true;\n        this._playEnd(stepValue);\n    };\n    /**\n     * NO DOM\n     * NO RECURSION\n     */\n    Animator.prototype._clearAsync = function () {\n        if (this._unregisterTrnsEnd) {\n            this._unregisterTrnsEnd();\n        }\n        if (this._timerId) {\n            clearTimeout(this._timerId);\n        }\n        this._timerId = this._unregisterTrnsEnd = undefined;\n    };\n    /**\n     * DOM WRITE\n     * NO RECURSION\n     */\n    Animator.prototype._progress = function (stepValue) {\n        // bread 'n butter\n        var val;\n        var elements = this._elements;\n        var effects = this._fxProperties;\n        if (!elements || elements.length === 0 || !effects || this._destroyed) {\n            return;\n        }\n        // flip the number if we're going in reverse\n        if (this._isReverse) {\n            stepValue = 1 - stepValue;\n        }\n        var i = 0;\n        var j = 0;\n        var finalTransform = '';\n        var fx;\n        for (i = 0; i < effects.length; i++) {\n            fx = effects[i];\n            if (fx.from && fx.to) {\n                var fromNum = fx.from.num;\n                var toNum = fx.to.num;\n                var tweenEffect = (fromNum !== toNum);\n                if (tweenEffect) {\n                    this._hasTweenEffect = true;\n                }\n                if (stepValue === 0) {\n                    // FROM\n                    val = fx.from.val;\n                }\n                else if (stepValue === 1) {\n                    // TO\n                    val = fx.to.val;\n                }\n                else if (tweenEffect) {\n                    // EVERYTHING IN BETWEEN\n                    var valNum = (((toNum - fromNum) * stepValue) + fromNum);\n                    var unit = fx.to.effectUnit;\n                    val = valNum + unit;\n                }\n                if (val !== null) {\n                    var prop = fx.effectName;\n                    if (fx.trans) {\n                        finalTransform += prop + '(' + val + ') ';\n                    }\n                    else {\n                        for (j = 0; j < elements.length; j++) {\n                            // ******** DOM WRITE ****************\n                            elements[j].style.setProperty(prop, val);\n                        }\n                    }\n                }\n            }\n        }\n        // place all transforms on the same property\n        if (finalTransform.length > 0) {\n            if (!this._isReverse && stepValue !== 1 || this._isReverse && stepValue !== 0) {\n                finalTransform += 'translateZ(0px)';\n            }\n            for (i = 0; i < elements.length; i++) {\n                // ******** DOM WRITE ****************\n                elements[i].style.setProperty('transform', finalTransform);\n                elements[i].style.setProperty('-webkit-transform', finalTransform);\n            }\n        }\n    };\n    /**\n     * DOM WRITE\n     * NO RECURSION\n     */\n    Animator.prototype._setTrans = function (dur, forcedLinearEasing) {\n        // Transition is not enabled if there are not effects\n        var elements = this._elements;\n        if (!elements || elements.length === 0 || !this._fxProperties) {\n            return;\n        }\n        // set the TRANSITION properties inline on the element\n        var easing = (forcedLinearEasing ? 'linear' : this.getEasing());\n        var durString = dur + 'ms';\n        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n            var style = elements_1[_i].style;\n            if (dur > 0) {\n                // ******** DOM WRITE ****************\n                style.transitionDuration = durString;\n                // each animation can have a different easing\n                if (easing !== null) {\n                    // ******** DOM WRITE ****************\n                    style.transitionTimingFunction = easing;\n                }\n            }\n            else {\n                style.transitionDuration = '0';\n            }\n        }\n    };\n    /**\n     * DOM READ\n     * DOM WRITE\n     * RECURSION\n     */\n    Animator.prototype._beforeAnimation = function () {\n        // fire off all the \"before\" function that have DOM READS in them\n        // elements will be in the DOM, however visibily hidden\n        // so we can read their dimensions if need be\n        // ******** DOM READ ****************\n        this._fireBeforeReadFunc();\n        // ******** DOM READS ABOVE / DOM WRITES BELOW ****************\n        // fire off all the \"before\" function that have DOM WRITES in them\n        // ******** DOM WRITE ****************\n        this._fireBeforeWriteFunc();\n        // stage all of the before css classes and inline styles\n        // ******** DOM WRITE ****************\n        this._setBeforeStyles();\n    };\n    /**\n     * DOM WRITE\n     * RECURSION\n     */\n    Animator.prototype._setBeforeStyles = function () {\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_7 = children; _i < children_7.length; _i++) {\n                var child = children_7[_i];\n                child._setBeforeStyles();\n            }\n        }\n        var elements = this._elements;\n        // before the animations have started\n        // only set before styles if animation is not reversed\n        if (!elements || elements.length === 0 || this._isReverse) {\n            return;\n        }\n        var addClasses = this._beforeAddClasses;\n        var removeClasses = this._beforeRemoveClasses;\n        for (var _a = 0, elements_2 = elements; _a < elements_2.length; _a++) {\n            var el = elements_2[_a];\n            var elementClassList = el.classList;\n            // css classes to add before the animation\n            if (addClasses) {\n                for (var _b = 0, addClasses_1 = addClasses; _b < addClasses_1.length; _b++) {\n                    var c = addClasses_1[_b];\n                    // ******** DOM WRITE ****************\n                    elementClassList.add(c);\n                }\n            }\n            // css classes to remove before the animation\n            if (removeClasses) {\n                for (var _c = 0, removeClasses_1 = removeClasses; _c < removeClasses_1.length; _c++) {\n                    var c = removeClasses_1[_c];\n                    // ******** DOM WRITE ****************\n                    elementClassList.remove(c);\n                }\n            }\n            // inline styles to add before the animation\n            if (this._beforeStyles) {\n                for (var _d = 0, _e = Object.entries(this._beforeStyles); _d < _e.length; _d++) {\n                    var _f = _e[_d], key = _f[0], value = _f[1];\n                    // ******** DOM WRITE ****************\n                    el.style.setProperty(key, value);\n                }\n            }\n        }\n    };\n    /**\n     * DOM READ\n     * RECURSION\n     */\n    Animator.prototype._fireBeforeReadFunc = function () {\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_8 = children; _i < children_8.length; _i++) {\n                var child = children_8[_i];\n                // ******** DOM READ ****************\n                child._fireBeforeReadFunc();\n            }\n        }\n        var readFunctions = this._readCallbacks;\n        if (readFunctions) {\n            for (var _a = 0, readFunctions_1 = readFunctions; _a < readFunctions_1.length; _a++) {\n                var callback = readFunctions_1[_a];\n                // ******** DOM READ ****************\n                callback();\n            }\n        }\n    };\n    /**\n     * DOM WRITE\n     * RECURSION\n     */\n    Animator.prototype._fireBeforeWriteFunc = function () {\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_9 = children; _i < children_9.length; _i++) {\n                var child = children_9[_i];\n                // ******** DOM WRITE ****************\n                child._fireBeforeWriteFunc();\n            }\n        }\n        var writeFunctions = this._writeCallbacks;\n        if (writeFunctions) {\n            for (var _a = 0, writeFunctions_1 = writeFunctions; _a < writeFunctions_1.length; _a++) {\n                var callback = writeFunctions_1[_a];\n                // ******** DOM WRITE ****************\n                callback();\n            }\n        }\n    };\n    /**\n     * DOM WRITE\n     */\n    Animator.prototype._setAfterStyles = function () {\n        var elements = this._elements;\n        if (!elements) {\n            return;\n        }\n        for (var _i = 0, elements_3 = elements; _i < elements_3.length; _i++) {\n            var el = elements_3[_i];\n            var elementClassList = el.classList;\n            // remove the transition duration/easing\n            // ******** DOM WRITE ****************\n            el.style.transitionDuration = el.style.transitionTimingFunction = '';\n            if (this._isReverse) {\n                // finished in reverse direction\n                // css classes that were added before the animation should be removed\n                var beforeAddClasses = this._beforeAddClasses;\n                if (beforeAddClasses) {\n                    for (var _a = 0, beforeAddClasses_1 = beforeAddClasses; _a < beforeAddClasses_1.length; _a++) {\n                        var c = beforeAddClasses_1[_a];\n                        elementClassList.remove(c);\n                    }\n                }\n                // css classes that were removed before the animation should be added\n                var beforeRemoveClasses = this._beforeRemoveClasses;\n                if (beforeRemoveClasses) {\n                    for (var _b = 0, beforeRemoveClasses_1 = beforeRemoveClasses; _b < beforeRemoveClasses_1.length; _b++) {\n                        var c = beforeRemoveClasses_1[_b];\n                        elementClassList.add(c);\n                    }\n                }\n                // inline styles that were added before the animation should be removed\n                var beforeStyles = this._beforeStyles;\n                if (beforeStyles) {\n                    for (var _c = 0, _d = Object.keys(beforeStyles); _c < _d.length; _c++) {\n                        var propName = _d[_c];\n                        // ******** DOM WRITE ****************\n                        el.style.removeProperty(propName);\n                    }\n                }\n            }\n            else {\n                // finished in forward direction\n                // css classes to add after the animation\n                var afterAddClasses = this._afterAddClasses;\n                if (afterAddClasses) {\n                    for (var _e = 0, afterAddClasses_1 = afterAddClasses; _e < afterAddClasses_1.length; _e++) {\n                        var c = afterAddClasses_1[_e];\n                        // ******** DOM WRITE ****************\n                        elementClassList.add(c);\n                    }\n                }\n                // css classes to remove after the animation\n                var afterRemoveClasses = this._afterRemoveClasses;\n                if (afterRemoveClasses) {\n                    for (var _f = 0, afterRemoveClasses_1 = afterRemoveClasses; _f < afterRemoveClasses_1.length; _f++) {\n                        var c = afterRemoveClasses_1[_f];\n                        // ******** DOM WRITE ****************\n                        elementClassList.remove(c);\n                    }\n                }\n                // inline styles to add after the animation\n                var afterStyles = this._afterStyles;\n                if (afterStyles) {\n                    for (var _g = 0, _h = Object.entries(afterStyles); _g < _h.length; _g++) {\n                        var _j = _h[_g], key = _j[0], value = _j[1];\n                        el.style.setProperty(key, value);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * DOM WRITE\n     * NO RECURSION\n     */\n    Animator.prototype._willChange = function (addWillChange) {\n        var wc;\n        var effects = this._fxProperties;\n        var willChange;\n        if (addWillChange && effects) {\n            wc = [];\n            for (var _i = 0, effects_1 = effects; _i < effects_1.length; _i++) {\n                var effect = effects_1[_i];\n                var propWC = effect.wc;\n                if (propWC === 'webkitTransform') {\n                    wc.push('transform', '-webkit-transform');\n                }\n                else if (propWC !== undefined) {\n                    wc.push(propWC);\n                }\n            }\n            willChange = wc.join(',');\n        }\n        else {\n            willChange = '';\n        }\n        var elements = this._elements;\n        if (elements) {\n            for (var _a = 0, elements_4 = elements; _a < elements_4.length; _a++) {\n                var el = elements_4[_a];\n                // ******** DOM WRITE ****************\n                el.style.setProperty('will-change', willChange);\n            }\n        }\n    };\n    /**\n     * Start the animation with a user controlled progress.\n     */\n    Animator.prototype.progressStart = function () {\n        // ensure all past transition end events have been cleared\n        this._clearAsync();\n        // ******** DOM READ/WRITE ****************\n        this._beforeAnimation();\n        // ******** DOM WRITE ****************\n        this._progressStart();\n    };\n    /**\n     * DOM WRITE\n     * RECURSION\n     */\n    Animator.prototype._progressStart = function () {\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_10 = children; _i < children_10.length; _i++) {\n                var child = children_10[_i];\n                // ******** DOM WRITE ****************\n                child._progressStart();\n            }\n        }\n        // force no duration, linear easing\n        // ******** DOM WRITE ****************\n        this._setTrans(0, true);\n        // ******** DOM WRITE ****************\n        this._willChange(true);\n    };\n    /**\n     * Set the progress step for this animation.\n     * progressStep() is not debounced, so it should not be called faster than 60FPS.\n     */\n    Animator.prototype.progressStep = function (stepValue) {\n        // only update if the last update was more than 16ms ago\n        stepValue = Math.min(1, Math.max(0, stepValue));\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_11 = children; _i < children_11.length; _i++) {\n                var child = children_11[_i];\n                // ******** DOM WRITE ****************\n                child.progressStep(stepValue);\n            }\n        }\n        // ******** DOM WRITE ****************\n        this._progress(stepValue);\n    };\n    /**\n     * End the progress animation.\n     */\n    Animator.prototype.progressEnd = function (shouldComplete, currentStepValue, dur) {\n        var _this = this;\n        if (dur === void 0) { dur = -1; }\n        if (this._isReverse) {\n            // if the animation is going in reverse then\n            // flip the step value: 0 becomes 1, 1 becomes 0\n            currentStepValue = 1 - currentStepValue;\n        }\n        var stepValue = shouldComplete ? 1 : 0;\n        var diff = Math.abs(currentStepValue - stepValue);\n        if (dur < 0) {\n            dur = this._duration || 0;\n        }\n        else if (diff < 0.05) {\n            dur = 0;\n        }\n        this._isAsync = (dur > 30);\n        this._progressEnd(shouldComplete, stepValue, dur, this._isAsync);\n        if (this._isAsync) {\n            // for the root animation only\n            // set the async TRANSITION END event\n            // and run onFinishes when the transition ends\n            // ******** DOM WRITE ****************\n            this._asyncEnd(dur, shouldComplete);\n            // this animation has a duration so we need another RAF\n            // for the CSS TRANSITION properties to kick in\n            if (!this._destroyed) {\n                raf(function () {\n                    _this._playToStep(stepValue);\n                });\n            }\n        }\n    };\n    /**\n     * DOM WRITE\n     * RECURSION\n     */\n    Animator.prototype._progressEnd = function (shouldComplete, stepValue, dur, isAsync) {\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_12 = children; _i < children_12.length; _i++) {\n                var child = children_12[_i];\n                // ******** DOM WRITE ****************\n                child._progressEnd(shouldComplete, stepValue, dur, isAsync);\n            }\n        }\n        if (!isAsync) {\n            // stop immediately\n            // set all the animations to their final position\n            // ******** DOM WRITE ****************\n            this._progress(stepValue);\n            this._willChange(false);\n            this._setAfterStyles();\n            this._didFinish(shouldComplete);\n        }\n        else {\n            // animate it back to it's ending position\n            this.isPlaying = true;\n            this.hasCompleted = false;\n            this._hasDur = true;\n            // ******** DOM WRITE ****************\n            this._willChange(true);\n            this._setTrans(dur, false);\n        }\n    };\n    /**\n     * Add a callback to fire when the animation has finished.\n     */\n    Animator.prototype.onFinish = function (callback, opts) {\n        if (opts && opts.clearExistingCallbacks) {\n            this._onFinishCallbacks = this._onFinishOneTimeCallbacks = undefined;\n        }\n        if (opts && opts.oneTimeCallback) {\n            this._onFinishOneTimeCallbacks = this._onFinishOneTimeCallbacks || [];\n            this._onFinishOneTimeCallbacks.push(callback);\n        }\n        else {\n            this._onFinishCallbacks = this._onFinishCallbacks || [];\n            this._onFinishCallbacks.push(callback);\n        }\n        return this;\n    };\n    /**\n     * NO DOM\n     * RECURSION\n     */\n    Animator.prototype._didFinishAll = function (hasCompleted, finishAsyncAnimations, finishNoDurationAnimations) {\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_13 = children; _i < children_13.length; _i++) {\n                var child = children_13[_i];\n                child._didFinishAll(hasCompleted, finishAsyncAnimations, finishNoDurationAnimations);\n            }\n        }\n        if (finishAsyncAnimations && this._isAsync || finishNoDurationAnimations && !this._isAsync) {\n            this._didFinish(hasCompleted);\n        }\n    };\n    /**\n     * NO RECURSION\n     */\n    Animator.prototype._didFinish = function (hasCompleted) {\n        this.isPlaying = false;\n        this.hasCompleted = hasCompleted;\n        if (this._onFinishCallbacks) {\n            // run all finish callbacks\n            for (var _i = 0, _a = this._onFinishCallbacks; _i < _a.length; _i++) {\n                var callback = _a[_i];\n                callback(this);\n            }\n        }\n        if (this._onFinishOneTimeCallbacks) {\n            // run all \"onetime\" finish callbacks\n            for (var _b = 0, _c = this._onFinishOneTimeCallbacks; _b < _c.length; _b++) {\n                var callback = _c[_b];\n                callback(this);\n            }\n            this._onFinishOneTimeCallbacks.length = 0;\n        }\n    };\n    /**\n     * Reverse the animation.\n     */\n    Animator.prototype.reverse = function (shouldReverse) {\n        if (shouldReverse === void 0) { shouldReverse = true; }\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_14 = children; _i < children_14.length; _i++) {\n                var child = children_14[_i];\n                child.reverse(shouldReverse);\n            }\n        }\n        this._isReverse = !!shouldReverse;\n        return this;\n    };\n    /**\n     * Recursively destroy this animation and all child animations.\n     */\n    Animator.prototype.destroy = function () {\n        this._didFinish(false);\n        this._destroyed = true;\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_15 = children; _i < children_15.length; _i++) {\n                var child = children_15[_i];\n                child.destroy();\n            }\n        }\n        this._clearAsync();\n        if (this._elements) {\n            this._elements.length = 0;\n        }\n        if (this._readCallbacks) {\n            this._readCallbacks.length = 0;\n        }\n        if (this._writeCallbacks) {\n            this._writeCallbacks.length = 0;\n        }\n        this.parent = undefined;\n        if (this._childAnimations) {\n            this._childAnimations.length = 0;\n        }\n        if (this._onFinishCallbacks) {\n            this._onFinishCallbacks.length = 0;\n        }\n        if (this._onFinishOneTimeCallbacks) {\n            this._onFinishOneTimeCallbacks.length = 0;\n        }\n    };\n    /**\n     * NO DOM\n     */\n    Animator.prototype._transEl = function () {\n        // get the lowest level element that has an Animator\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_16 = children; _i < children_16.length; _i++) {\n                var child = children_16[_i];\n                var targetEl = child._transEl();\n                if (targetEl) {\n                    return targetEl;\n                }\n            }\n        }\n        return (this._hasTweenEffect &&\n            this._hasDur &&\n            this._elements !== undefined &&\n            this._elements.length > 0 ?\n            this._elements[0] : null);\n    };\n    return Animator;\n}());\nvar create = function (animationBuilder, baseEl, opts) {\n    if (animationBuilder) {\n        return animationBuilder(Animator, baseEl, opts);\n    }\n    return Promise.resolve(new Animator());\n};\nexport { create };\n"]},"metadata":{},"sourceType":"module"}